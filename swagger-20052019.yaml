swagger: '2.0'
info:
  title: Talon.One API
  version: 1.0.0
  description: >
    The Talon.One API is used to manage applications and campaigns, as well as
    to

    integrate with your application. The operations in the _Integration API_
    section

    are used to integrate with our platform, while the other operations are

    used to manage applications and campaigns.


    ### Where is the API?


    The API is available at the same hostname as these docs. For example, if you
    are reading this page at `https://mycompany.talon.one/docs/api/`, the URL
    for the [updateCustomerProfile][] operation is
    `https://mycompany.talon.one/v1/customer_profiles/id`


    [updateCustomerProfile]:
    #operation--v1-customer_profiles--integrationId--put
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
securityDefinitions:
  integration_auth:
    type: apiKey
    name: Content-Signature
    in: header
    description: Requests are signed using the secret key of an Application.
  manager_auth:
    type: apiKey
    name: Authorization
    in: header
    description: >
      The Management API operations use a simple bearer token to authenticate
      requests. You can obtain a bearer token from your credentials using the
      [createSession](#createSession) operation. This `token` property of the
      session is used to authenticate Campaign Manager requests with an HTTP
      header like `Authorization: Bearer $TOKEN`.
security:
  - manager_auth: []
tags:
  - name: Integration API
    description: >
      The Integration API is how you push data into the Talon.One environment.
      You can create profiles for your customers, sessions to group their
      activity, and custom events to track specific actions that do not fit into
      the session data model.

      You will need [Authentication][] to make requests to the API.

      [Authentication]: /integration-api/authentication
  - name: Sessions
    description: |
      Operations for logging in/out of the Campaign Manager.
  - name: Applications
  - name: Analytics
    description: >
      Analytics are used to retrieve statistical data about the performance
      ofcampaigns within an application.
  - name: Campaigns
    description: >
      Campaigns are the primary resource used to control the behaviour of the
      Talon.One Rule Engine. They combine rulesets, coupons, and limits into a
      single unit.
  - name: Coupons
    description: >
      Coupons are unique codes belonging to a particular campaign. They don't
      define any behaviour on their own, instead the campaign ruleset can
      include rules that validate coupons and carry out particular effects.
  - name: Customization
    description: >-
      Talon.One is extremely customizable. These API operations allow you to
      alter the data model and rule builder to better suit Talon.One to the
      needs of your business.
  - name: Campaign Analytics
    description: >
      Campaign Analytics are used to retrieve statistical data about the
      performance of a specific campaign.
  - name: Customer Data
    description: >
      Customer Data operations are used to retrieve data about
      customers/sessions/events for reporting and debugging in the Campaign
      Manager.
  - name: Logs
    description: >
      The Talon.One API records all incoming and outgoing requests. These API
      operations allow you to query those logs.
  - name: Accounts & Users
    description: >
      Operations for updating account information such as billing email
      addresses, inviting users, etc.
  - name: Storage
    description: >
      Operations for interacting with the Application Storage. Store any data
      you want in a storage and then use it in the Rule Builder using a custom
      template (to be provided by Talon.One)
paths:
  '/v1/customer_profiles/{integrationId}':
    put:
      operationId: updateCustomerProfile
      summary: Update a Customer Profile
      description: >
        Update (or create) a [Customer Profile][]. This profile information can
        then be matched and/or updated by campaign [Rules][].


        The `integrationId` may be any identifier that will remain stable for
        the customer. For example, you might use a database ID, an email, or a
        phone number as the `integrationId`. It is vital that this ID **not**
        change over time, so **don't** use any identifier that the customer can
        update themselves. E.g. if your application allows a customer to update
        their e-mail address, you should instead use a database ID.


        Updating a customer profile will return a response with the full
        integration state. This includes the current state of the customer
        profile, the customer session, the event that was recorded, and an array
        of effects that took place.


        [Customer Profile]: /Getting-Started/entities#customer-profile

        [Rules]: /Getting-Started/entities#campaigns-rulesets-and-coupons
      security:
        - integration_auth: []
      tags:
        - integration
      parameters:
        - name: integrationId
          in: path
          type: string
          description: >-
            The custom identifier for this profile, must be unique within the
            account.
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewCustomerProfile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IntegrationState'
  '/v1/customer_sessions/{customerSessionId}':
    put:
      operationId: updateCustomerSession
      summary: Update a Customer Session
      description: >
        Update (or create) a [Customer Session][]. For example, the items in a
        customers cart are part of a session.


        The Talon.One platform supports multiple simultaneous sessions for the
        same profile, so if you have multiple ways of accessing the same
        application you have the option of either tracking multiple independent
        sessions or using the same session across all of them. You should share
        sessions when application access points share other state, such as the
        users cart. If two points of access to the application have independent
        state (e.g. a user can have different items in their cart across the
        two) they should use independent customer session ID's.


        The `profileId` parameter in the request body should correspond to an
        `integrationId` for a customer profile, to track an anonymous session
        use the empty string (`""`) as the `profileId`. Note that you do **not**
        need to create a customer profile first: if the specified profile does
        not yet exist, an empty profile will be created automatically.


        Updating a customer profile will return a response with the full
        integration state. This includes the current state of the customer
        profile, the customer session, the event that was recorded, and an array
        of effects that took place.


        The currency for the session and the cart items in the session is the
        same as that of the application with which the session is associated.


        [Customer Session]: /Getting-Started/entities#customer-session
      security:
        - integration_auth: []
      tags:
        - integration
      parameters:
        - name: customerSessionId
          in: path
          type: string
          description: >-
            The custom identifier for this session, must be unique within the
            account.
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewCustomerSession'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/IntegrationState'
  /v1/events:
    post:
      operationId: trackEvent
      summary: Track an Event
      description: >
        Records an arbitrary event in a customer session. For example, an
        integration might record an event when a user updates their payment
        information.


        The `sessionId` body parameter is required, an event is always part of a
        session. Much like updating a customer session, if either the profile or
        the session do not exist, a new empty one will be created. Note that if
        the specified session already exists, it must belong to the same
        `profileId` or an error will be returned.


        As with customer sessions, you can use an empty string for `profileId`
        to indicate that this is an anonymous session.


        Updating a customer profile will return a response with the full
        integration state. This includes the current state of the customer
        profile, the customer session, the event that was recorded, and an array
        of effects that took place.
      security:
        - integration_auth: []
      tags:
        - integration
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewEvent'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/IntegrationState'
  /v1/referrals:
    post:
      operationId: createReferral
      summary: Create a referral code for an advocate
      description: >
        Creates a referral code for an advocate. The code will be valid for the
        referral campaign for which is created, indicated in the `campaignId`
        parameter, and will be associated with the profile specified in the
        `advocateProfileIntegrationId` parameter as the advocate's profile.
      security:
        - integration_auth: []
      tags:
        - integration
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewReferral'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Referral'
  '/v1/customer_data/{integrationId}':
    delete:
      operationId: deleteCustomerData
      summary: Delete the personal data of a customer.
      description: >
        Delete all attributes on the customer profile and on entities that
        reference that customer profile.
      security:
        - integration_auth: []
      tags:
        - integration
      parameters:
        - name: integrationId
          in: path
          type: string
          description: >-
            The custom identifier for this profile, must be unique within the
            account.
          required: true
      responses:
        '204':
          description: No Content
  /v1/applications:
    get:
      operationId: getApplications
      summary: List Applications
      description: List all application in the current account.
      tags:
        - management
      parameters:
        - &ref_1
          name: pageSize
          in: query
          required: false
          type: integer
          description: >-
            The number of items to include in this response. When omitted, the
            maximum value of 1000 will be used.
        - &ref_2
          name: skip
          in: query
          required: false
          type: integer
          description: >-
            Skips the given number of items when paging through large result
            sets.
        - &ref_3
          name: sort
          in: query
          required: false
          type: string
          description: >-
            The field by which results should be sorted. Sorting defaults to
            ascending order, prefix the field name with `-` to sort in
            descending order.
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Application'
  '/v1/applications/{applicationId}':
    get:
      operationId: getApplication
      summary: Get Application
      description: Get the application specified by the ID.
      tags:
        - management
      parameters:
        - &ref_0
          name: applicationId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
  '/v1/applications/{applicationId}/campaigns':
    post:
      operationId: createCampaign
      summary: Create a Campaign
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewCampaign'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Campaign'
    get:
      operationId: getCampaigns
      summary: List your Campaigns
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - &ref_5
          name: campaignState
          in: query
          description: Filter results by the state of the campaign.
          required: false
          type: string
          enum:
            - enabled
            - disabled
            - archived
            - draft
            - scheduled
            - running
            - expired
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Campaign'
  '/v1/applications/{applicationId}/campaign_set':
    put:
      operationId: updateCampaignSet
      summary: Update a Campaign Set
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewCampaignSet'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignSet'
    get:
      operationId: getCampaignSet
      summary: List CampaignSet
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignSet'
  '/v1/applications/{applicationId}/campaigns/{campaignId}':
    get:
      operationId: getCampaign
      summary: Get a Campaign
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - &ref_4
          name: campaignId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Campaign'
    put:
      operationId: updateCampaign
      summary: Update a Campaign
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCampaign'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Campaign'
    delete:
      operationId: deleteCampaign
      summary: Delete a Campaign
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/campaigns/{campaignId}/copy':
    post:
      operationId: copyCampaignToApplications
      summary: Copy the campaign into every specified application
      description: Copy the campaign into every specified application.
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CampaignCopy'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Campaign'
  '/v1/applications/{applicationId}/campaigns_search':
    post:
      operationId: getCampaignByAttributes
      summary: Get a list of all campaigns that match the given attributes
      description: |
        Gets a list of all the campaigns that exactly match a set of attributes.
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_5
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CampaignSearch'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Campaign'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/rulesets':
    post:
      operationId: createRuleset
      summary: Create a Ruleset
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewRuleset'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Ruleset'
    get:
      operationId: getRulesets
      summary: List Campaign Rulesets
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Ruleset'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/rulesets/{rulesetId}':
    put:
      operationId: updateRuleset
      summary: Update a Ruleset
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - &ref_6
          name: rulesetId
          in: path
          description: ''
          required: true
          type: integer
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewRuleset'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Ruleset'
    get:
      operationId: getRuleset
      summary: Get a Ruleset
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - *ref_6
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Ruleset'
    delete:
      operationId: deleteRuleset
      summary: Delete a Ruleset
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - *ref_6
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons':
    post:
      operationId: createCoupons
      summary: Create Coupons
      description: >-
        Create coupons according to some pattern. Up to 20.000 coupons can be
        created without a unique prefix. When a unique prefix is provided, up to
        200.000 coupns can be created.
      tags:
        - management
      parameters:
        - name: silent
          in: query
          description: >-
            If set to 'yes', response will be an empty 204, otherwise a list of
            the coupons generated (to to 1000).
          required: false
          type: string
        - *ref_0
        - *ref_4
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewCoupons'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
        '204':
          description: No Content
    put:
      operationId: updateCouponBatch
      summary: Update a Batch of Coupons
      description: ''
      tags:
        - management
      parameters:
        - *ref_0
        - *ref_4
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCouponBatch'
      responses:
        '204':
          description: No Content
    get:
      operationId: getCoupons
      summary: List Coupons
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_4
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: startsAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: startsBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: expiresAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: expiresBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - &ref_7
          name: batchId
          in: query
          description: Filter results by batches of coupons
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
    delete:
      operationId: deleteCoupons
      summary: Delete Coupons
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: startsAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: startsBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: expiresAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: expiresBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - *ref_7
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons/no_total':
    get:
      operationId: getCouponsWithoutTotalCount
      summary: List Coupons
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_4
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - *ref_7
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons/{couponId}':
    put:
      operationId: updateCoupon
      summary: Update a Coupon
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: couponId
          in: path
          description: The ID of the coupon code to update
          required: true
          type: string
        - name: body
          in: body
          schema:
            $ref: '#/definitions/UpdateCoupon'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Coupon'
    delete:
      operationId: deleteCoupon
      summary: Delete one Coupon
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: couponId
          in: path
          description: The ID of the coupon code to delete
          required: true
          type: string
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search':
    post:
      operationId: getCouponsByAttributes
      summary: Get a list of the coupons that match the given attributes
      description: >
        Gets a list of all the coupons that exactly match a set of attributes.


        The match is successful if all the attributes of the request are found
        in a coupon, even if the coupon has more attributes that are not present
        on the request.
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_4
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_7
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CouponSearch'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/coupons_search':
    post:
      operationId: getCouponsByAttributesApplicationWide
      summary: >-
        Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      description: >
        Gets a list of all the coupons with attributes matching the query
        criteria Application wide
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - *ref_7
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_5
        - name: body
          in: body
          schema:
            $ref: '#/definitions/CouponSearch'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced':
    post:
      operationId: searchCouponsAdvanced
      summary: Get a list of the coupons that match the given attributes
      description: >
        Gets a list of all the coupons with attributes matching the query
        criteria
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_4
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_7
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AttributeQuery'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/coupons_search_advanced/no_total':
    post:
      operationId: searchCouponsAdvancedWithoutTotalCount
      summary: Get a list of the coupons that match the given attributes
      description: >
        Gets a list of all the coupons with attributes matching the query
        criteria
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - *ref_4
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_7
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AttributeQuery'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/coupons_search_advanced':
    post:
      operationId: searchCouponsAdvancedApplicationWide
      summary: >-
        Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      description: >
        Gets a list of all the coupons with attributes matching the query
        criteria in all active campaigns of an application
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - *ref_7
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_5
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AttributeQuery'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/coupons_search_advanced/no_total':
    post:
      operationId: searchCouponsAdvancedApplicationWideWithoutTotalCount
      summary: >-
        Get a list of the coupons that match the given attributes in all active
        campaigns of an application
      description: >
        Gets a list of all the coupons with attributes matching the query
        criteria in all active campaigns of an application
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_0
        - name: value
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            coupon code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the coupon creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches coupons in which the expiry date is set and in the past. The
            second matches coupons in which start date is null or in the past
            and expiry date is null or in the future, the third matches coupons
            in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only coupons where
            `usageCounter < usageLimit` will be returned, "false" will return
            only coupons where `usageCounter >= usageLimit`.
          type: string
        - name: referralId
          in: query
          description: >-
            Filter the results by matching them with the Id of a referral, that
            meaning the coupons that had been created as an effect of the usage
            of a referral code.
          required: false
          type: integer
        - name: recipientIntegrationId
          in: query
          description: >-
            Filter results by match with a profile id specified in the coupon's
            RecipientIntegrationId field
          required: false
          type: string
        - *ref_7
        - name: exactMatch
          in: query
          description: >-
            Filter results to an exact case-insensitive matching against the
            coupon code
          required: false
          type: boolean
          default: false
        - *ref_5
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AttributeQuery'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Coupon'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/referrals':
    get:
      operationId: getReferrals
      summary: List Referrals
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: code
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            referral code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the referral creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the referral creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches referrals in which the expiry date is set and in the past.
            The second matches referrals in which start date is null or in the
            past and expiry date is null or in the future, the third matches
            referrals in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only referrals where
            `usageCounter < usageLimit` will be returned, "false" will return
            only referrals where `usageCounter >= usageLimit`.
          type: string
        - name: advocate
          in: query
          required: false
          type: string
          description: >-
            Filter results by match with a profile id specified in the
            referral's AdvocateProfileIntegrationId field
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Referral'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/referrals/{referralId}':
    delete:
      operationId: deleteReferral
      summary: Delete one Referral
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: referralId
          in: path
          description: The ID of the referral code to delete
          required: true
          type: string
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/campaigns/{campaignId}/referrals/no_total':
    get:
      operationId: getReferralsWithoutTotalCount
      summary: List Referrals
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: campaignId
          in: path
          description: ''
          required: true
          type: integer
        - name: code
          in: query
          description: >-
            Filter results performing case-insensitive matching against the
            referral code. Both the code and the query are folded to remove all
            non-alpha-numeric characters.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the referral creation timestamp.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results comparing the parameter value, expected to be an
            RFC3339 timestamp string, to the referral creation timestamp.
          required: false
          type: string
          format: date-time
        - name: valid
          in: query
          enum:
            - expired
            - validNow
            - validFuture
          description: >
            Either "expired", "validNow", or "validFuture". The first option
            matches referrals in which the expiry date is set and in the past.
            The second matches referrals in which start date is null or in the
            past and expiry date is null or in the future, the third matches
            referrals in which start date is set and in the future.
          required: false
          type: string
        - name: usable
          in: query
          enum:
            - 'true'
            - 'false'
          description: >
            Either "true" or "false". If "true", only referrals where
            `usageCounter < usageLimit` will be returned, "false" will return
            only referrals where `usageCounter >= usageLimit`.
          type: string
        - name: advocate
          in: query
          required: false
          type: string
          description: >-
            Filter results by match with a profile id specified in the
            referral's AdvocateProfileIntegrationId field
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/Referral'
  /v1/loyalty_programs:
    get:
      operationId: getLoyaltyPrograms
      summary: List all loyalty Programs
      description: ''
      tags:
        - management
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/LoyaltyProgram'
  '/v1/loyalty_programs/{programID}':
    get:
      operationId: getLoyaltyProgram
      summary: Get a loyalty program
      description: ''
      tags:
        - management
      parameters:
        - name: programID
          in: path
          type: string
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoyaltyProgram'
  '/v1/loyalty_programs/{programID}/profile/{integrationID}':
    get:
      operationId: getLoyaltyPoints
      summary: get the Loyalty Ledger for this integrationID
      description: Get the Loyalty Ledger for this profile integration ID.
      tags:
        - management
      parameters:
        - name: programID
          in: path
          type: string
          description: >-
            The identifier for the application, must be unique within the
            account.
          required: true
        - name: integrationID
          in: path
          type: string
          description: >-
            The identifier for the application, must be unique within the
            account.
          required: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoyaltyLedger'
  '/v1/loyalty_programs/{programID}/profile/{integrationID}/add_points':
    put:
      operationId: addLoyaltyPoints
      summary: Add points in a certain loyalty program for the specified customer
      description: ''
      tags:
        - management
      parameters:
        - name: programID
          in: path
          type: string
          required: true
        - name: integrationID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LoyaltyPoints'
      responses:
        '204':
          description: No Content
  '/v1/loyalty_programs/{programID}/profile/{integrationID}/deduct_points':
    put:
      operationId: removeLoyaltyPoints
      summary: Deduct points in a certain loyalty program for the specified customer
      description: ''
      tags:
        - management
      parameters:
        - name: programID
          in: path
          type: string
          required: true
        - name: integrationID
          in: path
          type: string
          required: true
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LoyaltyPoints'
      responses:
        '204':
          description: No Content
  '/v1/applications/{applicationId}/health_report':
    get:
      operationId: getApplicationApiHealth
      summary: Get report of health of application API
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationApiHealth'
  '/v1/applications/{applicationId}/access_logs':
    get:
      operationId: getAccessLogs
      summary: Get access logs for application
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: path
          in: query
          type: string
          description: >-
            Only return results where the request path matches the given regular
            expresssion.
        - name: method
          in: query
          type: string
          description: >-
            Only return results where the request method matches the given
            regular expresssion.
          enum:
            - get
            - put
            - post
            - delete
            - patch
        - name: status
          in: query
          description: Filter results by HTTP status codes.
          required: false
          type: string
          enum:
            - success
            - error
        - name: rangeStart
          in: query
          required: true
          type: string
          format: date-time
          description: >-
            Only return results from after this timestamp, must be an RFC3339
            timestamp string
        - name: rangeEnd
          in: query
          required: true
          type: string
          format: date-time
          description: >-
            Only return results from before this timestamp, must be an RFC3339
            timestamp string
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/AccessLogEntry'
  '/v1/applications/{applicationId}/access_logs/no_total':
    get:
      operationId: getAccessLogsWithoutTotalCount
      summary: Get access logs for application
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - &ref_10
          name: path
          in: query
          type: string
          description: >-
            Only return results where the request path matches the given regular
            expresssion.
        - &ref_11
          name: method
          in: query
          type: string
          description: >-
            Only return results where the request method matches the given
            regular expresssion.
          enum:
            - get
            - put
            - post
            - delete
            - patch
        - &ref_12
          name: status
          in: query
          description: Filter results by HTTP status codes.
          required: false
          type: string
          enum:
            - success
            - error
        - &ref_8
          name: rangeStart
          in: query
          required: true
          type: string
          format: date-time
          description: >-
            Only return results from after this timestamp, must be an RFC3339
            timestamp string
        - &ref_9
          name: rangeEnd
          in: query
          required: true
          type: string
          format: date-time
          description: >-
            Only return results from before this timestamp, must be an RFC3339
            timestamp string
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/AccessLogEntry'
  /v1/access_logs:
    get:
      operationId: getAllAccessLogs
      summary: Get all access logs
      description: >
        Fetches the access logs for the entire account. Sensitive requests
        (logins) are _always_ filtered from the logs.
      tags:
        - management
      parameters:
        - *ref_8
        - *ref_9
        - *ref_10
        - *ref_11
        - *ref_12
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/AccessLogEntry'
  '/v1/applications/{applicationId}/campaigns/{campaignId}/analytics':
    get:
      operationId: getCampaignAnalytics
      summary: Get analytics of campaigns
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          description: The identifier for the application
          in: path
          required: true
          type: integer
        - *ref_4
        - *ref_8
        - *ref_9
        - name: granularity
          in: query
          type: string
          enum:
            - 1 hour
            - 1 day
            - 1 week
            - 1 month
            - 1 year
          description: The time interval between the results in the returned time-series.
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/CampaignAnalytics'
  '/v1/applications/{applicationId}/customers':
    get:
      operationId: getApplicationCustomers
      summary: List Application Customers
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationCustomer'
  /v1/customer_search/no_total:
    post:
      operationId: getCustomersByAttributes
      summary: Get a list of the customer profiles that match the given attributes
      description: >
        Gets a list of all the customer profiles for the account that exactly
        match a set of attributes.


        The match is successful if all the attributes of the request are found
        in a profile, even if the profile has more attributes that are not
        present on the request.


        [Customer Profile]:
        http://help.talon.one/customer/en/portal/articles/2525263-data-model?b_id=14115#customer-profile
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ApplicationCustomerSearch'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationCustomer'
  '/v1/customers/{customerId}':
    get:
      operationId: getCustomerProfile
      summary: Get Customer Profile
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: customerId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationCustomer'
  /v1/customers/no_total:
    get:
      operationId: getCustomerProfiles
      summary: List Customer Profiles
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationCustomer'
  /v1/application_customer_search:
    post:
      deprecated: true
      operationId: getApplicationCustomersByAttributes
      summary: Get a list of the customer profiles that match the given attributes
      description: >
        Gets a list of all the customer profiles for the account that exactly
        match a set of attributes.


        The match is successful if all the attributes of the request are found
        in a profile, even if the profile has more attributes that are not
        present on the request.


        [Customer Profile]:
        http://help.talon.one/customer/en/portal/articles/2525263-data-model?b_id=14115#customer-profile
      security:
        - integration_auth: []
      tags:
        - management
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/ApplicationCustomerSearch'
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationCustomer'
  '/v1/applications/{applicationId}/customers/{customerId}':
    get:
      operationId: getApplicationCustomer
      summary: Get Application Customer
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: customerId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationCustomer'
  '/v1/applications/{applicationId}/customer_activity_reports':
    get:
      operationId: getCustomerActivityReports
      summary: Get Activity Reports for Application Customers
      description: >-
        Fetch summary reports for all application customers based on a time
        range
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_8
        - *ref_9
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: name
          in: query
          description: Only return reports matching the customer name
          required: false
          type: string
        - name: integrationId
          in: query
          description: Only return reports matching the integrationId
          required: false
          type: string
        - name: campaignName
          in: query
          description: Only return reports matching the campaignName
          required: false
          type: string
        - name: advocateName
          in: query
          description: Only return reports matching the current customer referrer name
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerActivityReport'
  '/v1/applications/{applicationId}/customer_activity_reports/no_total':
    get:
      operationId: getCustomerActivityReportsWithoutTotalCount
      summary: Get Activity Reports for Application Customers
      description: >-
        Fetch summary reports for all application customers based on a time
        range. Instead of having the total number of results in the response,
        this endpoint only if there are more results.
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_8
        - *ref_9
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: name
          in: query
          description: Only return reports matching the customer name
          required: false
          type: string
        - name: integrationId
          in: query
          description: Only return reports matching the integrationId
          required: false
          type: string
        - name: campaignName
          in: query
          description: Only return reports matching the campaignName
          required: false
          type: string
        - name: advocateName
          in: query
          description: Only return reports matching the current customer referrer name
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/CustomerActivityReport'
  '/v1/applications/{applicationId}/customer_activity_reports/{customerId}':
    get:
      operationId: getCustomerActivityReport
      summary: Get Activity Report for Single Customer
      description: >-
        Fetch summary report for single application customer based on a time
        range
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_8
        - *ref_9
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: customerId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerActivityReport'
  '/v1/applications/{applicationId}/customers/{customerId}/analytics':
    get:
      operationId: getCustomerAnalytics
      summary: Get Analytics Report for a Customer
      description: Fetch analytics for single application customer
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: customerId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerAnalytics'
  '/v1/applications/{applicationId}/sessions':
    get:
      operationId: getApplicationSessions
      summary: List Application Sessions
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: profile
          in: query
          required: false
          type: string
          description: Profile integration ID filter for sessions. Must be exact match.
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationSession'
  '/v1/applications/{applicationId}/sessions/{sessionId}':
    get:
      operationId: getApplicationSession
      summary: Get Application Session
      description: ''
      tags:
        - management
      parameters:
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
        - name: sessionId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApplicationSession'
  '/v1/applications/{applicationId}/events':
    get:
      operationId: getApplicationEvents
      description: |
        Lists all events recorded for an application.
      summary: List Applications Events
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: type
          in: query
          required: false
          type: string
          description: >-
            Comma-separated list of types by which to filter events. Must be
            exact match(es).
        - name: createdBefore
          in: query
          description: Only return events created before this date
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: Only return events created after this date
          required: false
          type: string
          format: date-time
        - name: session
          in: query
          required: false
          type: string
          description: Session integration ID filter for events. Must be exact match.
        - name: profile
          in: query
          required: false
          type: string
          description: Profile integration ID filter for events. Must be exact match.
        - name: customerName
          in: query
          required: false
          type: string
          description: >-
            Customer name filter for events. Will match substrings
            case-insensitively.
          minLength: 2
        - name: customerEmail
          in: query
          required: false
          type: string
          description: >-
            Customer e-mail address filter for events. Will match substrings
            case-insensitively.
          minLength: 2
        - name: effectsQuery
          in: query
          required: false
          type: string
          description: >-
            Effects filter for events. Will perform a full-text search on the
            text content of the events effects, if any.
        - name: attributesQuery
          in: query
          required: false
          type: string
          description: >-
            Attributes filter for events. Will perform a full-text search on the
            text content of the events attributes, both keys and values.
        - name: ruleQuery
          in: query
          description: Rule name filter for events
          required: false
          type: string
        - name: campaignQuery
          in: query
          description: Campaign name filter for events
          required: false
          type: string
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationEvent'
  '/v1/applications/{applicationId}/events/no_total':
    get:
      operationId: getApplicationEventsWithoutTotalCount
      description: >
        Lists all events recorded for an application. Instead of having the
        total number of results in the response, this endpoint only if there are
        more results.
      summary: List Applications Events
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: type
          in: query
          required: false
          type: string
          description: >-
            Comma-separated list of types by which to filter events. Must be
            exact match(es).
        - name: createdBefore
          in: query
          description: Only return events created before this date
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: Only return events created after this date
          required: false
          type: string
          format: date-time
        - name: session
          in: query
          required: false
          type: string
          description: Session integration ID filter for events. Must be exact match.
        - name: profile
          in: query
          required: false
          type: string
          description: Profile integration ID filter for events. Must be exact match.
        - name: customerName
          in: query
          required: false
          type: string
          description: >-
            Customer name filter for events. Will match substrings
            case-insensitively.
          minLength: 2
        - name: customerEmail
          in: query
          required: false
          type: string
          description: >-
            Customer e-mail address filter for events. Will match substrings
            case-insensitively.
          minLength: 2
        - name: effectsQuery
          in: query
          required: false
          type: string
          description: >-
            Effects filter for events. Will perform a full-text search on the
            text content of the events effects, if any.
        - name: attributesQuery
          in: query
          required: false
          type: string
          description: >-
            Attributes filter for events. Will perform a full-text search on the
            text content of the events attributes, both keys and values.
        - name: ruleQuery
          in: query
          description: Rule name filter for events
          required: false
          type: string
        - name: campaignQuery
          in: query
          description: Campaign name filter for events
          required: false
          type: string
        - name: applicationId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - hasMore
              - data
            properties:
              hasMore:
                type: boolean
              data:
                type: array
                items:
                  $ref: '#/definitions/ApplicationEvent'
  '/v1/applications/{applicationId}/event_types':
    get:
      operationId: getApplicationEventTypes
      summary: List Applications Event Types
      description: >
        Get all of the distinct values of the Event `type` property for events
        recorded in the application.


        See also: [Track an event](/integration-api/reference/#trackEvent)
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: applicationId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  type: string
  '/v1/attributes/{attributeId}':
    get:
      operationId: getAttribute
      summary: Get a custom attribute
      description: |
        Returns custom attribute for the account by its id.
      tags:
        - management
      parameters:
        - name: attributeId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Attribute'
  /v1/webhooks:
    get:
      operationId: getWebhooks
      summary: List Webhooks
      description: ''
      tags:
        - management
      parameters:
        - &ref_13
          name: applicationIds
          in: query
          required: false
          type: string
          description: Filter by one or more application ids separated by comma
        - *ref_3
        - *ref_1
        - *ref_2
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Webhook'
  '/v1/webhooks/{webhookId}':
    get:
      operationId: getWebhook
      summary: Get Webhook
      description: Returns an webhook by its id.
      tags:
        - management
      parameters:
        - name: webhookId
          in: path
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
  /v1/webhook_activation_logs:
    get:
      operationId: getWebhookActivationLogs
      summary: List Webhook activation Log Entries
      description: >-
        Webhook activation log entries would be created as soon as an
        integration request triggered an effect with a webhook
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - name: integrationRequestUuid
          in: query
          description: Filter results by integration request UUID.
          type: string
        - name: webhookId
          in: query
          description: Filter results by Webhook.
          type: number
        - name: applicationId
          in: query
          type: number
        - name: campaignId
          in: query
          description: Filter results by campaign.
          type: number
        - name: createdBefore
          in: query
          description: Only return events created before this date.
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results where request and response times to return entries
            after parameter value, expected to be an RFC3339 timestamp string.
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/WebhookActivationLogEntry'
  /v1/webhook_logs:
    get:
      operationId: getWebhookLogs
      summary: List Webhook Log Entries
      description: ''
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
        - *ref_12
        - name: webhookId
          in: query
          description: Filter results by Webhook.
          required: false
          type: number
        - name: applicationId
          in: query
          required: false
          type: number
        - name: campaignId
          in: query
          description: Filter results by campaign.
          required: false
          type: number
        - name: requestUuid
          in: query
          description: Filter results by request UUID.
          required: false
          type: string
        - name: createdBefore
          in: query
          description: >-
            Filter results where request and response times to return entries
            before parameter value, expected to be an RFC3339 timestamp string.
          required: false
          type: string
          format: date-time
        - name: createdAfter
          in: query
          description: >-
            Filter results where request and response times to return entries
            after parameter value, expected to be an RFC3339 timestamp string.
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/WebhookLogEntry'
  /v1/event_types:
    get:
      operationId: getEventTypes
      summary: List Event Types
      description: >
        Fetch all event type definitions for your account. Each event type can
        be
      tags:
        - management
      parameters:
        - *ref_13
        - name: name
          type: string
          in: query
          description: >-
            Filter results to event types with the given name. This parameter
            implies `includeOldVersions`.
        - name: includeOldVersions
          type: boolean
          in: query
          default: false
          description: Include all versions of every event type.
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/EventType'
  /v1/refresh_analytics:
    post:
      operationId: refreshAnalytics
      summary: Trigger refresh on stale analytics.
      description: Should be used to trigger a manual refresh of analytics.
      tags:
        - management
      responses:
        '204':
          description: No Content
  /v1/users:
    get:
      operationId: getUsers
      summary: List Users in your account
      description: |
        Retrieve all users in your account.
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/User'
  '/v1/users/{userId}':
    get:
      operationId: getUser
      summary: Get a single User
      description: >
        Retrieves the data (including an invitation code) for a user. Non-admin
        users can only get themselves.
      tags:
        - management
      parameters:
        - name: userId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
  /v1/changes:
    get:
      operationId: getChanges
      summary: Get audit log for an account
      description: >-
        Get list of changes caused by API calls for an account. Only accessible
        for admins.
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - *ref_3
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Change'
  /v1/password_recovery_emails:
    post:
      operationId: createPasswordRecoveryEmail
      summary: Request a password reset
      description: >
        Sends an email with a password recovery link to the email of an existing
        account.
      tags:
        - management
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewPasswordEmail'
      responses:
        '204':
          description: Created
          schema:
            $ref: '#/definitions/NewPasswordEmail'
  /v1/reset_password:
    post:
      operationId: resetPassword
      summary: Reset password
      description: |
        Consumes the supplied password reset token and updates the password for
        the associated account.
      tags:
        - management
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/NewPassword'
      responses:
        '204':
          description: Created
          schema:
            $ref: '#/definitions/NewPassword'
  '/v1/accounts/{accountId}':
    get:
      operationId: getAccount
      summary: Get Account Details
      description: |
        Return the details of your companies Talon.One account.
      tags:
        - management
      parameters:
        - name: accountId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
  '/v1/accounts/{accountId}/analytics':
    get:
      operationId: getAccountAnalytics
      summary: Get Account Analytics
      description: |
        Return the analytics of your companies Talon.One account.
      tags:
        - management
      parameters:
        - name: accountId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAnalytics'
  '/v1/accounts/{accountId}/limits':
    get:
      operationId: getAccountLimits
      summary: Get Account Limits
      description: |
        Returns a list of all account limits set
      tags:
        - management
      parameters:
        - name: accountId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountLimits'
    put:
      operationId: setAccountLimits
      summary: Set account limits
      description: |
        sets account limits 
      tags:
        - management
      parameters:
        - name: accountId
          in: path
          description: ''
          required: true
          type: integer
        - name: body
          in: body
          schema:
            $ref: '#/definitions/AccountLimits'
      responses:
        '204':
          description: No Content
  /v1/sessions:
    post:
      operationId: createSession
      summary: Create a Session
      description: ''
      tags:
        - management
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/LoginParams'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Session'
  /v1/exports:
    get:
      operationId: getExports
      summary: Get Exports
      description: |
        Get a list of all past exports
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
        - name: applicationId
          in: query
          type: integer
          required: false
        - name: campaignId
          in: query
          type: integer
          required: false
        - name: entity
          in: query
          type: string
          enum:
            - Coupon
            - Effect
            - CustomerSession
          required: false
          description: The name of the entity type that was exported.
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Export'
  /v1/imports:
    get:
      operationId: getImports
      summary: Get Imports
      description: |
        Get a list of all past imports
      tags:
        - management
      parameters:
        - *ref_1
        - *ref_2
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Import'
  /v1/roles:
    get:
      operationId: getAllRoles
      summary: Get all roles.
      tags:
        - management
      responses:
        '200':
          description: OK
          schema:
            type: object
            required:
              - totalResultSize
              - data
            properties:
              totalResultSize:
                type: integer
              data:
                type: array
                items:
                  $ref: '#/definitions/Role'
  '/v1/roles/{roleId}':
    get:
      operationId: getRole
      summary: Get information for the specified role.
      tags:
        - management
      parameters:
        - name: roleId
          in: path
          description: ''
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Role'
definitions:
  MiscUpdateUserLatestFeature:
    type: object
    properties:
      latestFeature:
        type: string
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
        description: A message describing the error.
      errors:
        type: array
        description: An array of individual problems encountered during the request.
        items:
          $ref: '#/definitions/APIError'
  APIError:
    type: object
    required:
      - source
      - title
    properties:
      title:
        type: string
        description: Short description of the problem.
      details:
        type: string
        description: Longer description of this specific instance of the problem.
      source:
        $ref: '#/definitions/ErrorSource'
  NewFeatureFlags:
    type: object
    properties:
      loyalty:
        type: boolean
        description: Whether the account has access to the loyalty features or not
      coupons_without_count:
        type: boolean
        description: Whether the account queries coupons with or without total result size
      betaEffects:
        type: boolean
        description: Whether the account can test beta effects or not
  FeatureFlags:
    type: object
    description: ''
    required:
      - accountId
    properties:
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      loyalty:
        type: boolean
        description: Whether the account has access to the loyalty features or not
      coupons_without_count:
        type: boolean
        description: Whether the account queries coupons with or without total result size
      betaEffects:
        type: boolean
        description: Whether the account can test beta effects or not
    additionalProperties: false
  FeatureFlag:
    type: object
    properties:
      name:
        type: string
        description: The name for the featureflag
      value:
        type: string
        description: The value for the featureflag
      created:
        type: string
        format: date-time
        description: The exact moment this entity was last created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
    required:
      - name
      - value
  ErrorSource:
    type: object
    description: >
      The source of the current error, exactly one of `pointer`, `parameter` or
      `line` will be defined.
    properties:
      pointer:
        type: string
        description: Pointer to the path in the payload that caused this error.
      parameter:
        type: string
        description: Query parameter that caused this error.
      line:
        type: string
        description: >-
          Line number in uploaded multipart file that caused this error. 'N/A'
          if unknown.
  Entity:
    type: object
    required:
      - id
      - created
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
  MutableEntity:
    type: object
    required:
      - modified
    properties:
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
  AccountEntity:
    type: object
    required:
      - accountId
    properties:
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
  UserEntity:
    type: object
    required:
      - userId
    properties:
      userId:
        type: integer
        description: The ID of the account that owns this entity.
  EmailEntity:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
        description: The email address associated with your account.
  ApplicationEntity:
    type: object
    required:
      - applicationId
    properties:
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
  MultiApplicationEntity:
    type: object
    required:
      - applicationIds
    properties:
      applicationIds:
        type: array
        description: The IDs of the applications that are related to this entity.
        items:
          type: integer
  CampaignEntity:
    type: object
    required:
      - campaignId
    properties:
      campaignId:
        type: integer
        title: Campaign ID
        description: The ID of the campaign that owns this entity.
  ApplicationSessionEntity:
    type: object
    required:
      - sessionId
    properties:
      sessionId:
        type: integer
        description: >-
          The globally unique Talon.One ID of the session where this entity was
          created.
  ApplicationCustomerEntity:
    type: object
    properties:
      profileId:
        type: integer
        description: >-
          The globally unique Talon.One ID of the customer that created this
          entity.
  IntegrationEntity:
    type: object
    required:
      - integrationId
      - created
    properties:
      integrationId:
        type: string
        format: string
        description: The ID used for this entity in the application system.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
  IntegrationProfileEntity:
    type: object
    properties:
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
  CouponValue:
    type: object
    properties:
      value:
        type: string
        title: Coupon Code
        description: The actual coupon code.
        minLength: 4
  CouponConstraints:
    type: object
    properties:
      usageLimit:
        type: integer
        minimum: 0
        maximum: 999999
        description: >
          The number of times a coupon code can be redeemed. This can be set to
          0 for no limit, but any campaign usage limits will still apply.
      startDate:
        type: string
        format: date-time
        minimum: 0
        description: Timestamp at which point the coupon becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        description: >-
          Expiry date of the coupon. Coupon never expires if this is omitted,
          zero, or negative.
  CodeGeneratorSettings:
    type: object
    properties:
      validCharacters:
        type: array
        description: >-
          Set of characters to be used when generating random part of code.
          Defaults to [A-Z, 0-9] (in terms of RegExp).
        items:
          type: string
      couponPattern:
        type: string
        description: >
          The pattern that will be used to generate coupon codes. The character
          `#` acts as a placeholder and will be replaced by a random character
          from the `validCharacters` set.
        minLength: 3
    additionalProperties: false
    required:
      - couponPattern
      - validCharacters
  Session:
    type: object
    properties:
      userId:
        type: integer
        description: The ID of the user of this session
      token:
        type: string
        description: An opaque session identifier
      created:
        type: string
        format: date-time
        description: Unix timestamp indicating when the session was first created.
    required:
      - userId
      - token
      - created
  LoginParams:
    type: object
    description: ''
    required:
      - email
      - password
    properties:
      email:
        type: string
        format: email
        description: The email address associated with your account.
      password:
        type: string
        description: The password for your account.
    additionalProperties: false
  NewApplication:
    type: object
    properties:
      name:
        type: string
        description: The name of this application.
        minLength: 1
      description:
        type: string
        description: A longer description of the application.
      key:
        type: string
        description: >-
          Hex key for HMAC-signing API calls as coming from this application (16
          hex digits)
        minLength: 16
        maxLength: 16
        pattern: '^[a-fA-F0-9]{16}$'
      timezone:
        type: string
        description: A string containing an IANA timezone descriptor.
        minLength: 1
      currency:
        type: string
        description: A string describing a default currency for new customer sessions.
        minLength: 1
      caseSensitivity:
        type: string
        enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
        description: >-
          A string indicating how should campaigns in this application deal with
          case sensitivity on coupon codes.
    required:
      - name
      - timezone
      - currency
      - key
  Application:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - accountId
      - name
      - timezone
      - currency
      - key
      - loyaltyPrograms
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      name:
        type: string
        description: The name of this application.
        minLength: 1
      description:
        type: string
        description: A longer description of the application.
      key:
        type: string
        description: >-
          Hex key for HMAC-signing API calls as coming from this application (16
          hex digits)
        minLength: 16
        maxLength: 16
        pattern: '^[a-fA-F0-9]{16}$'
      timezone:
        type: string
        description: A string containing an IANA timezone descriptor.
        minLength: 1
      currency:
        type: string
        description: A string describing a default currency for new customer sessions.
        minLength: 1
      caseSensitivity:
        type: string
        enum:
          - sensitive
          - insensitive-uppercase
          - insensitive-lowercase
        description: >-
          A string indicating how should campaigns in this application deal with
          case sensitivity on coupon codes.
      loyaltyPrograms:
        type: array
        description: >-
          An array containing all the loyalty programs to which this application
          is subscribed
        items:
          $ref: '#/definitions/LoyaltyProgram'
    additionalProperties: false
  NewCampaign:
    type: object
    properties:
      name:
        type: string
        title: Campaign Name
        description: A friendly name for this campaign.
        minLength: 1
      description:
        type: string
        title: Campaign Description
        description: A detailed description of the campaign.
      startTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become active.
      endTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become in-active.
      attributes:
        type: object
        description: Arbitrary properties associated with this campaign
        additionalProperties: true
      state:
        type: string
        enum:
          - enabled
          - disabled
          - archived
        default: enabled
        description: |
          A disabled or archived campaign is not evaluated for rules or coupons.
      activeRulesetId:
        type: integer
        description: ID of Ruleset this campaign applies on customer session evaluation.
      tags:
        type: array
        description: A list of tags for the campaign.
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
      features:
        type: array
        description: A list of features for the campaign.
        minItems: 0
        maxItems: 3
        items:
          type: string
          enum:
            - coupons
            - referrals
            - loyalty
      couponSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      referralSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      limits:
        type: array
        description: The set of limits that will operate for this campaign
        items:
          $ref: '#/definitions/LimitConfig'
    required:
      - name
      - state
      - tags
      - limits
      - features
  UpdateCampaign:
    type: object
    properties:
      name:
        type: string
        title: Campaign Name
        description: A friendly name for this campaign.
        minLength: 1
      description:
        type: string
        title: Campaign Description
        description: A detailed description of the campaign.
      startTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become active.
      endTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become in-active.
      attributes:
        type: object
        description: Arbitrary properties associated with this campaign
        additionalProperties: true
      state:
        type: string
        enum:
          - enabled
          - disabled
          - archived
        default: enabled
        description: |
          A disabled or archived campaign is not evaluated for rules or coupons.
      activeRulesetId:
        type: integer
        description: ID of Ruleset this campaign applies on customer session evaluation.
      tags:
        type: array
        description: A list of tags for the campaign.
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
      features:
        type: array
        description: A list of features for the campaign.
        minItems: 0
        maxItems: 3
        items:
          type: string
          enum:
            - coupons
            - referrals
            - loyalty
      couponSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      referralSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      limits:
        type: array
        description: The set of limits that will operate for this campaign
        items:
          $ref: '#/definitions/LimitConfig'
    required:
      - name
      - tags
      - limits
      - features
  Campaign:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - userId
      - name
      - state
      - tags
      - limits
      - features
      - description
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      userId:
        type: integer
        description: The ID of the account that owns this entity.
      name:
        type: string
        title: Campaign Name
        description: A friendly name for this campaign.
        minLength: 1
      description:
        type: string
        title: Campaign Description
        description: A detailed description of the campaign.
      startTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become active.
      endTime:
        type: string
        format: date-time
        description: Datetime when the campaign will become in-active.
      attributes:
        type: object
        description: Arbitrary properties associated with this campaign
        additionalProperties: true
      state:
        type: string
        enum:
          - enabled
          - disabled
          - archived
        default: enabled
        description: |
          A disabled or archived campaign is not evaluated for rules or coupons.
      activeRulesetId:
        type: integer
        description: ID of Ruleset this campaign applies on customer session evaluation.
      tags:
        type: array
        description: A list of tags for the campaign.
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
      features:
        type: array
        description: A list of features for the campaign.
        minItems: 0
        maxItems: 3
        items:
          type: string
          enum:
            - coupons
            - referrals
            - loyalty
      couponSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      referralSettings:
        $ref: '#/definitions/CodeGeneratorSettings'
      limits:
        type: array
        description: The set of limits that will operate for this campaign
        items:
          $ref: '#/definitions/LimitConfig'
      couponRedemptionCount:
        type: integer
        description: Number of coupons redeemed in the campaign.
      referralRedemptionCount:
        type: integer
        description: Number of referral codes redeemed in the campaign.
      discountCount:
        type: integer
        description: Total amount of discounts redeemed in the campaign.
      lastActivity:
        type: string
        format: date-time
        description: Timestamp of the most recent event received by this campaign.
      updated:
        type: string
        format: date-time
        description: >-
          Timestamp of the most recent update to the campaign or any of its
          elements.
      createdBy:
        type: string
        description: Name of the user who created this campaign if available.
      updatedBy:
        type: string
        description: Name of the user who last updated this campaign if available.
    additionalProperties: false
  NewRuleset:
    type: object
    required:
      - rules
      - bindings
    properties:
      rules:
        type: array
        description: Set of rules to apply.
        items:
          $ref: '#/definitions/Rule'
      bindings:
        type: array
        description: >-
          An array that provides objects with variable names (name) and talang
          expressions to whose result they are bound (expression) during rule
          evaluation. The order of the evaluation is decided by the position in
          the array.
        items:
          $ref: '#/definitions/Binding'
      rbVersion:
        type: string
        description: >-
          A string indicating which version of the rulebuilder was used to
          create this ruleset.
      activate:
        type: boolean
        description: >-
          A boolean indicating whether this newly created ruleset should also be
          activated for the campaign owns it
  Ruleset:
    type: object
    description: ''
    required:
      - id
      - created
      - campaignId
      - userId
      - rules
      - bindings
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      campaignId:
        type: integer
        title: Campaign ID
        description: The ID of the campaign that owns this entity.
      userId:
        type: integer
        description: The ID of the account that owns this entity.
      rules:
        type: array
        description: Set of rules to apply.
        items:
          $ref: '#/definitions/Rule'
      bindings:
        type: array
        description: >-
          An array that provides objects with variable names (name) and talang
          expressions to whose result they are bound (expression) during rule
          evaluation. The order of the evaluation is decided by the position in
          the array.
        items:
          $ref: '#/definitions/Binding'
      rbVersion:
        type: string
        description: >-
          A string indicating which version of the rulebuilder was used to
          create this ruleset.
      activate:
        type: boolean
        description: >-
          A boolean indicating whether this newly created ruleset should also be
          activated for the campaign owns it
      activatedAt:
        type: string
        format: date-time
        description: Timestamp indicating when this Ruleset was activated.
    additionalProperties: false
  NewApplicationStorage:
    type: object
    required:
      - name
      - datatype
    properties:
      name:
        type: string
        description: >-
          Identifier for the information to be saved, e.g. "Loyalty points for
          SKU".
      datatype:
        type: object
        description: A JSON Schema describing the information to be saved in the storage
        additionalProperties: true
      description:
        type: string
        description: Description of the application store
  ApplicationStorage:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - applicationId
      - name
      - datatype
      - usedAt
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      name:
        type: string
        description: >-
          Identifier for the information to be saved, e.g. "Loyalty points for
          SKU".
      datatype:
        type: object
        description: A JSON Schema describing the information to be saved in the storage
        additionalProperties: true
      description:
        type: string
        description: Description of the application store
      usedAt:
        type: array
        description: array of rulesets where the application storage is used
        items:
          type: string
    additionalProperties: false
  ApplicationStorageData:
    type: array
    description: Array of ApplicationStorageData.
    items:
      $ref: '#/definitions/ApplicationStorageTuple'
  NewApplicationStorageData:
    type: array
    description: Array of ApplicationStorageData to be created.
    items:
      $ref: '#/definitions/NewApplicationStorageTuple'
  NewApplicationStorageTuple:
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: >-
          Key information that will map to a value, e.g. SKU number
          "LEV-JN-SL-36-GN".
        minLength: 1
      value: {}
    additionalProperties: false
  ApplicationStorageTuple:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - key
      - value
      - storageId
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      key:
        type: string
        description: >-
          Key information that will map to a value, e.g. SKU number
          "LEV-JN-SL-36-GN".
        minLength: 1
      value: {}
      storageId:
        type: integer
        description: ID of the storage in which the data resides
    additionalProperties: false
  Binding:
    type: object
    required:
      - name
      - expression
    properties:
      name:
        type: string
        description: A descriptive name for the value to be bound.
      expression:
        type: array
        description: >-
          A Talang expression that will be evaluated and its result attached to
          the name of the binding.
        items:
          type: object
  Rule:
    type: object
    required:
      - title
      - condition
      - effects
    properties:
      title:
        type: string
        description: A short description of the rule.
      description:
        type: string
        description: 'A longer, more detailed description of the rule.'
      bindings:
        type: array
        description: >-
          An array that provides objects with variable names (name) and talang
          expressions to whose result they are bound (expression) during rule
          evaluation. The order of the evaluation is decided by the position in
          the array.
        items:
          $ref: '#/definitions/Binding'
      condition:
        type: array
        description: >-
          A Talang expression that will be evaluated in the context of the given
          event.
        minItems: 1
        items:
          type: object
      effects:
        type: array
        description: >-
          An array of effectful Talang expressions in arrays that will be
          evaluated when a rule matches.
        items:
          type: object
  LimitConfig:
    type: object
    required:
      - action
      - limit
      - entities
    properties:
      action:
        type: string
        enum:
          - redeemCoupon
          - redeemReferral
          - setDiscount
          - createCoupon
        description: The limitable action to which this limit will be applied
      limit:
        type: number
        minimum: 0
        description: The value to set for the limit
      entities:
        type: array
        description: The entities that make the address of this limit
        items:
          type: string
          enum:
            - Coupon
            - Referral
            - Profile
  CampaignSet:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - set
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      set:
        $ref: '#/definitions/CampaignSetBranchNode'
    additionalProperties: false
  CampaignSetNode:
    type: object
    required:
      - type
    properties:
      type:
        type: string
  CampaignSetBranchNode:
    type: object
    additionalProperties: false
    required:
      - type
      - name
      - operator
      - elements
    properties:
      type:
        type: string
        description: Indicates the node type
        enum:
          - SET
      name:
        type: string
        description: Name of the set
      operator:
        type: string
        description: How does the set operates on its elements
        enum:
          - ALL
          - FIRST
      elements:
        type: array
        description: Child elements of this set
        items:
          $ref: '#/definitions/CampaignSetNode'
  CampaignSetLeafNode:
    type: object
    additionalProperties: false
    required:
      - type
      - campaignId
    properties:
      type:
        type: string
        description: Indicates the node type
        enum:
          - CAMPAIGN
      campaignId:
        type: integer
        description: ID of the campaign
  NewCampaignSet:
    type: object
    description: ''
    required:
      - applicationId
      - set
    properties:
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      set:
        $ref: '#/definitions/CampaignSetBranchNode'
    additionalProperties: false
  NewReferral:
    type: object
    properties:
      campaignId:
        type: integer
        title: Referral's Campaign ID
        description: ID of the campaign from which the referral received the referral code.
      advocateProfileIntegrationId:
        type: string
        title: Advocate's Profile id
        description: The Integration Id of the Advocate's Profile
      friendProfileIntegrationId:
        type: string
        title: Friend's Profile ID
        description: An optional Integration ID of the Friend's Profile
      startDate:
        type: string
        format: date-time
        minimum: 0
        title: Referral code valid from
        description: Timestamp at which point the referral code becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        title: Referral code valid until
        description: >-
          Expiry date of the referral code. Referral never expires if this is
          omitted, zero, or negative.
    required:
      - campaignId
      - advocateProfileIntegrationId
  Referral:
    type: object
    description: ''
    required:
      - id
      - created
      - campaignId
      - advocateProfileIntegrationId
      - code
      - usageCounter
      - usageLimit
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      campaignId:
        type: integer
        title: Referral's Campaign ID
        description: ID of the campaign from which the referral received the referral code.
      advocateProfileIntegrationId:
        type: string
        title: Advocate's Profile id
        description: The Integration Id of the Advocate's Profile
      friendProfileIntegrationId:
        type: string
        title: Friend's Profile ID
        description: An optional Integration ID of the Friend's Profile
      startDate:
        type: string
        format: date-time
        minimum: 0
        title: Referral code valid from
        description: Timestamp at which point the referral code becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        title: Referral code valid until
        description: >-
          Expiry date of the referral code. Referral never expires if this is
          omitted, zero, or negative.
      code:
        type: string
        title: Referral code
        description: The actual referral code.
        minLength: 4
      usageCounter:
        type: integer
        title: Referral Code Usages
        description: The number of times this referral code has been successfully used.
      usageLimit:
        type: integer
        minimum: 0
        description: >
          The number of times a referral code can be used. This can be set to 0
          for no limit, but any campaign usage limits will still apply.
    additionalProperties: false
  AttributeQuery:
    type: object
    additionalProperties: true
  CouponSearch:
    type: object
    required:
      - attributes
    properties:
      attributes:
        type: object
        description: >-
          Properties to match against a coupon. All provided attributes will be
          exactly matched against attributes
        additionalProperties: true
  CampaignSearch:
    type: object
    required:
      - attributes
    properties:
      attributes:
        type: object
        description: >-
          Properties to match against a campaign. All provided attributes will
          be exactly matched against campaign attributes
        additionalProperties: true
  CampaignCopy:
    type: object
    required:
      - applicationIds
    properties:
      name:
        type: string
        description: >-
          Name of the copied campaign (Defaults to "Copy of original campaign
          name")
      applicationIds:
        type: array
        description: >-
          Application IDs of the applications to which a campaign should be
          copied to
        additionalProperties: true
        items:
          type: string
  NewCoupons:
    type: object
    description: ''
    required:
      - couponPattern
      - validCharacters
      - numberOfCoupons
      - usageLimit
    properties:
      usageLimit:
        type: integer
        minimum: 0
        maximum: 999999
        description: >
          The number of times a coupon code can be redeemed. This can be set to
          0 for no limit, but any campaign usage limits will still apply.
      startDate:
        type: string
        format: date-time
        minimum: 0
        description: Timestamp at which point the coupon becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        description: >-
          Expiry date of the coupon. Coupon never expires if this is omitted,
          zero, or negative.
      validCharacters:
        type: array
        description: >-
          Set of characters to be used when generating random part of code.
          Defaults to [A-Z, 0-9] (in terms of RegExp).
        items:
          type: string
      couponPattern:
        type: string
        description: >
          The pattern that will be used to generate coupon codes. The character
          `#` acts as a placeholder and will be replaced by a random character
          from the `validCharacters` set.
        minLength: 3
      numberOfCoupons:
        type: integer
        description: >-
          The number of new coupon codes to generate for the campaign. Must be
          at least 1.
      uniquePrefix:
        title: Coupon code unique prefix
        type: string
        description: A unique prefix to prepend to all generated coupons.
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
      recipientIntegrationId:
        title: Receiving customer profile integration ID
        type: string
        description: The integration ID for this coupon's beneficiary's profile
    additionalProperties: false
  UpdateCoupon:
    type: object
    description: ''
    properties:
      usageLimit:
        type: integer
        minimum: 0
        maximum: 999999
        description: >
          The number of times a coupon code can be redeemed. This can be set to
          0 for no limit, but any campaign usage limits will still apply.
      startDate:
        type: string
        format: date-time
        minimum: 0
        description: Timestamp at which point the coupon becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        description: >-
          Expiry date of the coupon. Coupon never expires if this is omitted,
          zero, or negative.
      recipientIntegrationId:
        title: Receiving customer profile integration ID
        type: string
        description: The integration ID for this coupon's beneficiary's profile
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
    additionalProperties: false
  UpdateCouponBatch:
    type: object
    description: ''
    required:
      - batchID
    properties:
      usageLimit:
        type: integer
        minimum: 0
        maximum: 999999
        description: >
          The number of times a coupon code can be redeemed. This can be set to
          0 for no limit, but any campaign usage limits will still apply.
      startDate:
        type: string
        format: date-time
        minimum: 0
        description: Timestamp at which point the coupon becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        description: >-
          Expiry date of the coupon. Coupon never expires if this is omitted,
          zero, or negative.
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
      batchID:
        title: Batch ID
        type: string
        description: The id of the batch the coupon belongs to.
    additionalProperties: false
  Coupon:
    type: object
    description: ''
    required:
      - id
      - created
      - campaignId
      - value
      - usageCounter
      - usageLimit
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      campaignId:
        type: integer
        title: Campaign ID
        description: The ID of the campaign that owns this entity.
      value:
        type: string
        title: Coupon Code
        description: The actual coupon code.
        minLength: 4
      usageLimit:
        type: integer
        minimum: 0
        maximum: 999999
        description: >
          The number of times a coupon code can be redeemed. This can be set to
          0 for no limit, but any campaign usage limits will still apply.
      startDate:
        type: string
        format: date-time
        minimum: 0
        description: Timestamp at which point the coupon becomes valid.
      expiryDate:
        type: string
        format: date-time
        minimum: 0
        description: >-
          Expiry date of the coupon. Coupon never expires if this is omitted,
          zero, or negative.
      usageCounter:
        type: integer
        title: Number of coupon usages
        description: The number of times this coupon has been successfully used.
      attributes:
        type: object
        title: Attributes of coupon
        description: Arbitrary properties associated with this item
        additionalProperties: true
      referralId:
        type: integer
        title: Advocate ID
        description: >-
          The integration ID of the referring customer (if any) for whom this
          coupon was created as an effect.
      recipientIntegrationId:
        title: Friend ID
        type: string
        description: The integration ID of a referred customer profile.
      importId:
        title: Import ID
        type: integer
        description: The ID of the Import which created this coupon.
      batchId:
        title: Batch ID
        type: string
        description: The id of the batch the coupon belongs to.
    additionalProperties: false
  CampaignAnalytics:
    type: object
    description: ''
    required:
      - date
      - campaignRevenue
      - totalCampaignRevenue
      - campaignDiscountCosts
      - totalCampaignDiscountCosts
      - campaignFreeItems
      - totalCampaignFreeItems
      - referralRedemptions
      - totalReferralRedemptions
      - couponRedemptions
      - totalCouponRedemptions
      - couponsCreated
      - totalCouponsCreated
      - referralsCreated
      - totalReferralsCreated
    properties:
      date:
        type: string
        format: date-time
      campaignRevenue:
        type: number
        description: Amount of revenue in this campaign.
      totalCampaignRevenue:
        type: number
        description: Amount of revenue in this campaign since it began.
      campaignDiscountCosts:
        type: number
        description: Amount of cost caused by discounts given in the campaign.
      totalCampaignDiscountCosts:
        type: number
        description: >-
          Amount of cost caused by discounts given in the campaign since it
          began.
      campaignFreeItems:
        type: integer
        description: Amount of free items given in the campaign.
      totalCampaignFreeItems:
        type: integer
        description: Amount of free items given in the campaign since it began.
      couponRedemptions:
        type: integer
        description: >-
          Number of coupon redemptions in the campaign (only accepted referrals
          on sessions that were closed are considered).
      totalCouponRedemptions:
        type: integer
        description: Number of coupon redemptions in the campaign since it began.
      referralRedemptions:
        type: integer
        description: Number of referral redemptions in the campaign.
      totalReferralRedemptions:
        type: integer
        description: Number of referral redemptions in the campaign since it began.
      couponsCreated:
        type: integer
        description: Number of coupons created in the campaign by the rule engine.
      totalCouponsCreated:
        type: integer
        description: >-
          Number of coupons created in the campaign by the rule engine since it
          began.
      referralsCreated:
        type: integer
        description: Number of referrals created in the campaign by the rule engine.
      totalReferralsCreated:
        type: integer
        description: >-
          Number of referrals created in the campaign by the rule engine since
          it began.
    additionalProperties: false
  ApplicationApiHealth:
    type: object
    description: Report of health of the API connection of an application
    required:
      - summary
      - lastUsed
    properties:
      summary:
        type: string
        description: One-word summary of the health of the API connection of an application
        enum:
          - OK
          - WARNING
          - ERROR
          - CRITICAL
          - NONE
      lastUsed:
        type: string
        format: date-time
        description: time of last request relevant to the API health test
  AccessLogEntry:
    type: object
    description: Log of application accesses
    required:
      - uuid
      - status
      - method
      - requestUri
      - time
      - requestPayload
      - responsePayload
    properties:
      uuid:
        type: string
        description: UUID reference of request
      status:
        type: integer
        description: HTTP status code of response
      method:
        type: string
        description: HTTP method of request
      requestUri:
        type: string
        description: target URI of request
      time:
        type: string
        format: date-time
        description: timestamp of request
      requestPayload:
        type: string
        description: payload of request
      responsePayload:
        type: string
        description: payload of response
  WebhookLogEntry:
    type: object
    description: Log of webhook api calls
    required:
      - id
      - integrationRequestUuid
      - webhookId
      - url
      - request
      - requestTime
    properties:
      id:
        type: string
        description: UUID reference of the webhook request
      integrationRequestUuid:
        type: string
        description: >-
          UUID reference of the integration request linked to this webhook
          request
      webhookId:
        type: integer
        description: ID of the webhook that triggered the request
      applicationId:
        type: integer
        description: ID of the application that triggered the webhook
      url:
        type: string
        description: Target url of request
      request:
        type: string
        description: Request message
      response:
        type: string
        description: Response message
      status:
        type: integer
        description: HTTP status code of response
      requestTime:
        type: string
        format: date-time
        description: Timestamp of request
      responseTime:
        type: string
        format: date-time
        description: Timestamp of response
  WebhookActivationLogEntry:
    type: object
    description: Log of activated webhooks
    required:
      - integrationRequestUuid
      - webhookId
      - applicationId
      - campaignId
      - created
    properties:
      integrationRequestUuid:
        type: string
        description: >-
          UUID reference of the integration request that triggered the effect
          with the webhook
      webhookId:
        type: integer
        description: ID of the webhook that triggered the request
      applicationId:
        type: integer
        description: ID of the application that triggered the webhook
      campaignId:
        type: integer
        description: ID of the campaign that triggered the webhook
      created:
        type: string
        format: date-time
        description: Timestamp of request
  User:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - email
      - accountId
      - inviteToken
      - state
      - name
      - policy
      - releaseUpdate
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      email:
        type: string
        format: email
        description: The email address associated with your account.
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      inviteToken:
        type: string
        description: 'Invite token, empty if the user as already accepted their invite.'
      state:
        type: string
        enum:
          - invited
          - active
          - deactivated
        description: Current user state.
      name:
        type: string
        description: Full name
      policy:
        type: string
        format: acl
        description: A blob of ACL JSON
      releaseUpdate:
        type: boolean
        description: Update the user via email
      latestFeature:
        type: string
        description: Latest feature the user has been notified.
      roles:
        type: array
        items:
          type: integer
        description: Contains a list of all roles a user is a memeber of
    additionalProperties: false
  NewInvitation:
    type: object
    description: Parameters for inviting a new user
    required:
      - email
      - acl
    properties:
      name:
        type: string
        description: Name of the user being invited.
      email:
        type: string
        format: email
      acl:
        type: string
        description: a blob of acl json
      roles:
        type: array
        items:
          type: integer
        description: An array of roleIDs to assign the new user to
  Change:
    type: object
    description: ''
    required:
      - id
      - created
      - userId
      - entity
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      userId:
        type: integer
        description: The ID of the account that owns this entity.
      entity:
        type: string
        description: API endpoint on which the change was initiated.
      old:
        type: object
        description: Resource before the change occured.
        additionalProperties: true
      new:
        type: object
        description: Resource after the change occured.
        additionalProperties: true
    additionalProperties: false
  LoyaltyPoints:
    type: object
    description: Points to add or deduct
    required:
      - points
    properties:
      points:
        type: number
        description: Amount of loyalty points
      name:
        type: string
        description: Allows to specify a name for the addition or deduction
      expiryDuration:
        type: string
        description: >-
          Indicates the duration after which the added loyalty points should
          expire. The format is a number followed by one letter indicating the
          unit, like '1h' or '40m' or '30d'.
  LoyaltyProgram:
    type: object
    description: A Loyalty Program
    required:
      - id
      - name
      - title
      - description
      - accountID
      - defaultValidity
      - subscribedApplications
    properties:
      id:
        type: integer
        description: The ID of loyalty program.
      accountID:
        type: integer
        description: The ID of the Talon.One account that owns this program.
      name:
        type: string
        description: The internal name for the Loyalty Program.
      title:
        type: string
        description: The display title for the Loyalty Program.
      description:
        type: string
        description: Description of our Loyalty Program.
      subscribedApplications:
        type: array
        description: >-
          A list containing the IDs of all applications that are subscribed to
          this Loyalty Program.
        items:
          type: integer
      defaultValidity:
        type: string
        description: >-
          Indicates the default duration after which new loyalty points should
          expire. The format is a number, followed by one letter indicating the
          unit; like '1h' or '40m' or '30d'.
  NewLoyaltyProgram:
    type: object
    description: A new loyalty program
    required:
      - name
      - title
      - defaultValidity
    properties:
      name:
        type: string
        description: The internal name for the Loyalty Program. This is an immutable value.
      title:
        type: string
        description: The display title for the Loyalty Program.
      description:
        type: string
        description: Description of our Loyalty Program.
      subscribedApplications:
        type: array
        description: >-
          A list containing the IDs of all applications that are subscribed to
          this Loyalty Program.
        items:
          type: integer
      defaultValidity:
        type: string
        description: >-
          Indicates the default duration after which new loyalty points should
          expire. The format is a number, followed by one letter indicating the
          unit; like '1h' or '40m' or '30d'.
  UpdateLoyaltyProgram:
    type: object
    description: Update Loyalty Program
    properties:
      title:
        type: string
        description: The display title for the Loyalty Program.
      description:
        type: string
        description: Description of our Loyalty Program.
      subscribedApplications:
        type: array
        description: >-
          A list containing the IDs of all applications that are subscribed to
          this Loyalty Program.
        items:
          type: integer
      defaultValidity:
        type: string
        description: >-
          Indicates the default duration after which new loyalty points should
          expire. The format is a number, followed by one letter indicating the
          unit; like '1h' or '40m' or '30d'.
  LoyaltyLedgerEntry:
    type: object
    description: 'A single row of the ledger, describing one addition or deduction.'
    required:
      - programID
      - type
      - customerProfileID
      - amount
      - created
      - name
    properties:
      created:
        type: string
        format: date-time
      programID:
        type: integer
      customerProfileID:
        type: string
      customerSessionID:
        type: string
      eventID:
        type: integer
      type:
        type: string
        enum:
          - addition
          - subtraction
      amount:
        type: number
      expiryDate:
        type: string
        format: date-time
      name:
        type: string
        description: >-
          A name referencing the condition or effect that added this entry, or
          the specific name provided in an API call.
  LoyaltyLedger:
    type: object
    description: Ledger of Balance in Loyalty Program for a Customer
    required:
      - total
      - transactions
    properties:
      total:
        type: number
        description: The current balance in the program.
      transactions:
        type: array
        items:
          $ref: '#/definitions/LoyaltyLedgerEntry'
      loyaltyProgramId:
        type: integer
        title: Loyalty program ID
        description: The ID of the loyalty program this ledger belongs to.
      loyaltyProgramName:
        type: string
        title: Loyalty program Name
        description: The name of the loyalty program this ledger belongs to.
  Loyalty:
    type: object
    description: Customer specific information about loyalty points.
    required:
      - programs
    properties:
      programs:
        type: object
        title: Customer's current loyalty program balance.
        description: A map holding information about the loyalty programs balance
        additionalProperties:
          $ref: '#/definitions/LoyaltyProgramBalance'
  LoyaltyProgramBalance:
    type: object
    required:
      - currentBalance
    description: The balance in a Loyalty Program for some Customer.
    properties:
      currentBalance:
        type: number
        title: Current Balance
  CustomerProfileSearchQuery:
    type: object
    properties:
      attributes:
        type: object
        description: >-
          Properties to match against a customer profile. All provided
          attributes will be exactly matched against profile attributes
        additionalProperties: true
      integrationIDs:
        type: array
        items:
          type: string
      profileIDs:
        type: array
        items:
          type: integer
  ApplicationCustomerSearch:
    type: object
    properties:
      attributes:
        type: object
        description: >-
          Properties to match against a customer profile. All provided
          attributes will be exactly matched against profile attributes
        additionalProperties: true
      integrationIDs:
        type: array
        items:
          type: string
      profileIDs:
        type: array
        items:
          type: integer
  NewCustomerProfile:
    type: object
    properties:
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
  CustomerProfile:
    type: object
    description: ''
    required:
      - integrationId
      - created
      - accountId
      - closedSessions
      - totalSales
      - loyaltyMemberships
      - lastActivity
      - attributes
    properties:
      integrationId:
        type: string
        format: string
        description: The ID used for this entity in the application system.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
      accountId:
        type: integer
        title: Profile belongs to Account
        description: The ID of the Talon.One account that owns this profile.
      closedSessions:
        type: integer
        title: Closed sessions
        description: >-
          The total amount of closed sessions by a customer. A closed session is
          a successful purchase.
      totalSales:
        type: number
        description: Sum of all purchases made by this customer
        title: Total Sales
      loyaltyMemberships:
        type: array
        description: A list of loyalty programs joined by the customer
        items:
          $ref: '#/definitions/LoyaltyMembership'
        title: Loyalty programed joined
      lastActivity:
        type: string
        format: date-time
        description: Timestamp of the most recent event received from this customer
        title: Last activity of customer
    additionalProperties: false
  NewCustomerSession:
    type: object
    description: ''
    properties:
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
      coupon:
        type: string
        description: Any coupon code entered.
        title: Coupon entered in session
      referral:
        type: string
        description: Any referral code entered.
        title: Referral code entered in session
      state:
        type: string
        enum:
          - open
          - closed
          - cancelled
        default: open
        description: |
          Indicates the current state of the session. All sessions must
          start in the "open" state, after which valid transitions are...

          1. open -> closed
          2. open -> cancelled
          3. closed -> cancelled
        title: Customer's session state
      cartItems:
        type: array
        description: Serialized JSON representation.
        title: Items in customer's cart
        items:
          $ref: '#/definitions/CartItem'
      total:
        type: number
        title: Session Total
        description: The total sum of the cart in one session.
      attributes:
        type: object
        description: >
          A key-value map of the sessions attributes. The potentially valid
          attributes are configured in your accounts developer settings.
        additionalProperties: true
    additionalProperties: false
  CustomerAnalytics:
    type: object
    description: ''
    required:
      - acceptedCoupons
      - createdCoupons
      - freeItems
      - totalOrders
      - totalDiscountedOrders
      - totalRevenue
      - totalDiscounts
    properties:
      acceptedCoupons:
        type: integer
        description: Total accepted coupons for this customer
      createdCoupons:
        type: integer
        description: Total created coupons for this customer
      freeItems:
        type: integer
        description: Total free items given to this customer
      totalOrders:
        type: integer
        description: Total orders made by this customer
      totalDiscountedOrders:
        type: integer
        description: Total orders made by this customer that had a discount
      totalRevenue:
        type: number
        description: Total Revenue across all closed sessions
      totalDiscounts:
        type: number
        description: The sum of discounts that were given across all closed sessions
    additionalProperties: false
  CustomerActivityReport:
    type: object
    description: ''
    required:
      - integrationId
      - created
      - name
      - customerId
      - couponRedemptions
      - couponUseAttempts
      - couponFailedAttempts
      - accruedDiscounts
      - accruedRevenue
      - totalOrders
      - totalOrdersNoCoupon
      - campaignName
    properties:
      integrationId:
        type: string
        format: string
        description: The ID used for this entity in the application system.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      name:
        type: string
        description: The name for this customer profile.
      customerId:
        type: integer
        description: The internal Talon.One ID of the customer.
      lastActivity:
        type: string
        format: date-time
        description: The last activity of the customer.
      couponRedemptions:
        type: integer
        description: Number of coupon redemptions in all customer campaigns.
      couponUseAttempts:
        type: integer
        description: Number of coupon use attempts in all customer campaigns.
      couponFailedAttempts:
        type: integer
        description: Number of failed coupon use attempts in all customer campaigns.
      accruedDiscounts:
        type: number
        description: Number of accrued discounts in all customer campaigns.
      accruedRevenue:
        type: number
        description: Amount of accrued revenue in all customer campaigns.
      totalOrders:
        type: integer
        description: Number of orders in all customer campaigns.
      totalOrdersNoCoupon:
        type: integer
        description: Number of orders without coupon used in all customer campaigns.
      campaignName:
        type: string
        description: The name of the campaign this customer belongs to.
    additionalProperties: false
  CustomerSession:
    type: object
    description: ''
    required:
      - integrationId
      - created
      - applicationId
      - profileId
      - firstSession
      - coupon
      - referral
      - state
      - cartItems
      - attributes
      - discounts
      - total
    properties:
      integrationId:
        type: string
        description: The ID used for this entity in the application system.
        format: string
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
      coupon:
        type: string
        description: Any coupon code entered.
        title: Coupon entered in session
      referral:
        type: string
        description: Any referral code entered.
        title: Referral code entered in session
      state:
        type: string
        enum:
          - open
          - closed
          - cancelled
        default: open
        description: |
          Indicates the current state of the session. All sessions must
          start in the "open" state, after which valid transitions are...

          1. open -> closed
          2. open -> cancelled
          3. closed -> cancelled
        title: Customer's session state
      cartItems:
        type: array
        description: Serialized JSON representation.
        title: Items in customer's cart
        items:
          $ref: '#/definitions/CartItem'
      total:
        type: number
        title: Session Total
        description: The total sum of the cart in one session.
      attributes:
        type: object
        description: >
          A key-value map of the sessions attributes. The potentially valid
          attributes are configured in your accounts developer settings.
        additionalProperties: true
      firstSession:
        type: boolean
        description: >-
          Indicates whether this is the first session for the customer's
          profile. Will always be true for anonymous sessions.
        title: First session ever?
      discounts:
        type: object
        title: Customer's current discounts
        description: >-
          A map of labelled discount values, values will be in the same currency
          as the application associated with the session.
        additionalProperties:
          type: number
    additionalProperties: false
  CartItem:
    type: object
    required:
      - name
      - sku
      - quantity
      - price
    properties:
      name:
        title: Name of item
        type: string
        minLength: 1
      sku:
        title: SKU of item
        type: string
        minLength: 1
      quantity:
        title: Quantity of item
        type: integer
        minimum: 1
      price:
        title: Price of item
        type: number
      category:
        title: Item category
        type: string
      weight:
        title: Weight of item
        type: number
        description: Weight of item in mm
      height:
        title: Height of item
        type: number
        description: Height of item in mm
      width:
        title: Width of item
        type: number
        description: Width of item in mm
      length:
        title: Length of item
        type: number
        description: Length of item in mm
      position:
        title: Position of Cart Item
        type: number
        description: Position of the Cart Item in the Cart (calculated internally)
      attributes:
        title: Item attributes
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
      adjustment:
        $ref: '#/definitions/CartItemAdjustment'
  NewEvent:
    type: object
    description: ''
    required:
      - type
      - attributes
      - sessionId
    properties:
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
      sessionId:
        type: string
        title: Session ID of Event
        description: The ID of the session that this event occurred in.
        minLength: 1
      type:
        type: string
        title: Event Type
        description: A string representing the event. Must not be a reserved event name.
        minLength: 1
      attributes:
        type: object
        description: Arbitrary additional JSON data associated with the event.
        additionalProperties: true
    additionalProperties: false
  Event:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - type
      - attributes
      - sessionId
      - effects
      - ledgerEntries
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
      sessionId:
        type: string
        title: Session ID of Event
        description: The ID of the session that this event occurred in.
        minLength: 1
      type:
        type: string
        title: Event Type
        description: A string representing the event. Must not be a reserved event name.
        minLength: 1
      attributes:
        type: object
        description: Arbitrary additional JSON data associated with the event.
        additionalProperties: true
      effects:
        type: array
        description: >
          An array of "effects" that must be applied in response to this event.
          Example effects include `addItemToCart` or `setDiscount`.
        items:
          type: object
      ledgerEntries:
        type: array
        description: Ledger entries for the event.
        items:
          $ref: '#/definitions/LedgerEntry'
      meta:
        $ref: '#/definitions/Meta'
    additionalProperties: false
  IntegrationState:
    type: object
    description: >
      Contains all state that might interest application integration plugins.
      This is the response type returned by all of the Integration API
      operations.
    properties:
      session:
        $ref: '#/definitions/CustomerSession'
      profile:
        $ref: '#/definitions/CustomerProfile'
      event:
        $ref: '#/definitions/Event'
      loyalty:
        $ref: '#/definitions/Loyalty'
    required:
      - session
      - profile
      - event
  ApplicationCustomer:
    type: object
    description: ''
    required:
      - id
      - created
      - integrationId
      - accountId
      - closedSessions
      - totalSales
      - loyaltyMemberships
      - lastActivity
      - attributes
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        description: >-
          The exact moment this entity was created. The exact moment this entity
          was created. The exact moment this entity was created.
        format: date-time
      integrationId:
        type: string
        description: >-
          The ID used for this entity in the application system. The ID used for
          this entity in the application system.
        format: string
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
      accountId:
        type: integer
        description: >-
          The ID of the Talon.One account that owns this profile. The ID of the
          Talon.One account that owns this profile.
      closedSessions:
        type: integer
        title: Closed sessions
        description: >-
          The total amount of closed sessions by a customer. A closed session is
          a successful purchase.
      totalSales:
        type: number
        description: Sum of all purchases made by this customer
        title: Total Sales
      loyaltyMemberships:
        type: array
        description: A list of loyalty programs joined by the customer
        items:
          $ref: '#/definitions/LoyaltyMembership'
        title: Loyalty programed joined
      lastActivity:
        type: string
        format: date-time
        description: Timestamp of the most recent event received from this customer
        title: Last activity of customer
    additionalProperties: false
  ApplicationSession:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - integrationId
      - coupon
      - referral
      - state
      - cartItems
      - discounts
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        description: >-
          The exact moment this entity was created. The exact moment this entity
          was created.
        format: date-time
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      profileId:
        type: integer
        description: >-
          The globally unique Talon.One ID of the customer that created this
          entity.
      integrationId:
        type: string
        format: string
        description: The ID used for this entity in the application system.
      coupon:
        type: string
        description: Any coupon code entered.
      referral:
        type: string
        description: Any referal code entered.
      state:
        type: string
        enum:
          - open
          - closed
          - cancelled
        description: >-
          Indicating if the customer session is in progress ("open"), "closed",
          or "cancelled".
      cartItems:
        type: array
        description: Serialized JSON representation.
        items:
          $ref: '#/definitions/CartItem'
      discounts:
        type: object
        description: >-
          A map of labelled discount values, in the same currency as the
          session.
        additionalProperties:
          type: number
      attributes:
        type: object
        description: Arbitrary properties associated with this item
        additionalProperties: true
    additionalProperties: false
  ApplicationEvent:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - type
      - attributes
      - effects
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      profileId:
        type: integer
        description: >-
          The globally unique Talon.One ID of the customer that created this
          entity.
      sessionId:
        type: integer
        description: >-
          The globally unique Talon.One ID of the session that contains this
          event.
      type:
        type: string
        description: A string representing the event. Must not be a reserved event name.
      attributes:
        type: object
        description: Additional JSON serialized data associated with the event.
        additionalProperties: true
      effects:
        type: array
        description: >-
          An array containing the effects that were applied as a result of this
          event.
        items:
          type: object
    additionalProperties: false
  NewAccount:
    type: object
    required:
      - companyName
    properties:
      companyName:
        type: string
        minLength: 1
  AccountAnalytics:
    type: object
    required:
      - applications
      - activeCampaigns
      - campaigns
      - coupons
      - activeCoupons
      - expiredCoupons
      - customAttributes
      - referralCodes
      - activeReferralCodes
      - expiredReferralCodes
      - users
      - roles
      - webhooks
      - loyaltyPrograms
    properties:
      applications:
        type: integer
        description: Total Number of Applications inside the account
      activeCampaigns:
        type: integer
        description: Total Number of Active Applications inside the account
      campaigns:
        type: integer
        description: Total Number of campaigns inside the account
      coupons:
        type: integer
        description: Total Number of coupons inside the account
      activeCoupons:
        type: integer
        description: Total Number of active coupons inside the account
      expiredCoupons:
        type: integer
        description: Total Number of expired coupons inside the account
      customAttributes:
        type: integer
        description: Total Number of custom attributes inside the account
      referralCodes:
        type: integer
        description: Total Number of referral codes inside the account
      activeReferralCodes:
        type: integer
        description: Total Number of active referral codes inside the account
      expiredReferralCodes:
        type: integer
        description: Total Number of expired referral codes inside the account
      users:
        type: integer
        description: Total Number of users inside the account
      roles:
        type: integer
        description: Total Number of roles inside the account
      webhooks:
        type: integer
        description: Total Number of webhooks inside the account
      loyaltyPrograms:
        type: integer
        description: Total Number of loyalty programs inside the account
  AccountLimits:
    type: object
    required:
      - liveApplications
      - sandboxApplications
      - activeCampaigns
      - coupons
      - referralCodes
      - liveLoyaltyPrograms
      - sandboxLoyaltyPrograms
      - webhooks
      - users
      - apiVolume
      - promotionTypes
    properties:
      liveApplications:
        type: integer
        description: Total Number of allowed live applications in the account
      sandboxApplications:
        type: integer
        description: Total Number of allowed sandbox applications in the account
      activeCampaigns:
        type: integer
        description: Total Number of allowed active campaigns in the account
      coupons:
        type: integer
        description: Total Number of allowed coupons in the account
      referralCodes:
        type: integer
        description: Total Number of allowed referral codes in the account
      liveLoyaltyPrograms:
        type: integer
        description: Total Number of allowed live loyalty programs in the account
      sandboxLoyaltyPrograms:
        type: integer
        description: Total Number of allowed sandbox loyalty programs in the account
      webhooks:
        type: integer
        description: Total Number of allowed webhooks in the account
      users:
        type: integer
        description: Total Number of allowed users in the account
      apiVolume:
        type: integer
        description: Total allowed api volume
      promotionTypes:
        type: array
        description: array of rulesets where webhook is used
        items:
          type: string
  UpdateAccount:
    type: object
    required:
      - companyName
      - billingEmail
    properties:
      companyName:
        type: string
        minLength: 1
        description: Name of your company.
      billingEmail:
        type: string
        format: email
        description: The billing email address associated with your company account.
  Account:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - companyName
      - domainName
      - state
      - billingEmail
      - applicationCount
      - userCount
      - campaignsActiveCount
      - campaignsInactiveCount
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      companyName:
        type: string
        minLength: 1
      domainName:
        type: string
        description: Subdomain Name for yourcompany.talon.one
      state:
        type: string
        enum:
          - trial
          - active
          - trial_expired
        description: 'State of the account (trial, active, trial_expired)'
      billingEmail:
        type: string
        format: email
        description: The billing email address associated with your company account.
      planName:
        type: string
        description: The name of your booked plan.
      planExpires:
        type: string
        format: date-time
        description: The point in time at which your current plan expires.
      applicationLimit:
        type: integer
        description: The maximum number of Applications covered by your plan.
      userLimit:
        type: integer
        description: The maximum number of Campaign Manager Users covered by your plan.
      campaignLimit:
        type: integer
        description: The maximum number of Campaigns covered by your plan.
      apiLimit:
        type: integer
        description: >-
          The maximum number of Integration API calls covered by your plan per
          billing period.
      applicationCount:
        type: integer
        description: The current number of Applications in your account.
      userCount:
        type: integer
        description: The current number of Campaign Manager Users in your account.
      campaignsActiveCount:
        type: integer
        description: The current number of active Campaigns in your account.
      campaignsInactiveCount:
        type: integer
        description: The current number of inactive Campaigns in your account.
    additionalProperties: false
  NewAccountSignUp:
    type: object
    description: ''
    required:
      - email
      - password
      - companyName
    properties:
      email:
        type: string
        format: email
        description: The email address associated with your account.
      password:
        type: string
        description: The password for your account.
      companyName:
        type: string
        minLength: 1
    additionalProperties: false
  NewUser:
    type: object
    description: ''
    required:
      - email
      - password
      - inviteToken
    properties:
      email:
        type: string
        format: email
        description: The email address associated with your account.
      password:
        type: string
        description: The password for your account.
      name:
        type: string
        description: Your name.
      inviteToken:
        type: string
        minLength: 1
    additionalProperties: false
  UpdateUser:
    type: object
    description: ''
    required:
      - email
    properties:
      email:
        type: string
        format: email
        description: The email address associated with your account.
      name:
        type: string
        description: Your name.
      password:
        type: string
        description: Your old password.
      newPassword:
        type: string
        description: Your new password.
      policy:
        type: string
        description: a blob of acl json
      state:
        type: string
        enum:
          - deactivated
          - active
        description: >-
          New state ("deactivated" or "active") for the user. Only usable by
          admins for the user.
      releaseUpdate:
        type: boolean
        description: Update the user via email
      latestFeature:
        type: string
        description: The latest feature you've been notified.
      roles:
        type: array
        items:
          type: integer
        description: Update
    additionalProperties: false
  NewInviteEmail:
    type: object
    required:
      - email
      - token
    properties:
      email:
        type: string
        format: email
        minLength: 1
      token:
        type: string
        minLength: 1
  NewPasswordEmail:
    type: object
    required:
      - email
    properties:
      email:
        type: string
        format: email
        minLength: 1
  NewPassword:
    type: object
    required:
      - password
      - resetToken
    properties:
      password:
        type: string
        description: The new password for your account.
      resetToken:
        type: string
        minLength: 1
  Environment:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - slots
      - functions
      - templates
      - variables
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      slots:
        type: array
        description: The slots defined for this application.
        items:
          $ref: '#/definitions/SlotDef'
      functions:
        type: array
        description: The functions defined for this application.
        items:
          $ref: '#/definitions/FunctionDef'
      templates:
        type: array
        description: The templates defined for this application.
        items:
          $ref: '#/definitions/TemplateDef'
      variables:
        type: string
    additionalProperties: false
  SlotDef:
    type: object
    required:
      - name
      - type
      - title
      - writable
    properties:
      name:
        type: string
        description: The dot-separated path to this slot for use in Talang.
      type:
        type: string
        description: 'The type of this slot, one of string, number, boolean, or list[type].'
      title:
        type: string
        description: Campaigner-friendly name for the slot.
      description:
        type: string
        description: A short description of the slot.
      help:
        type: string
        description: Extended help text for the slot.
      writable:
        type: boolean
        description: Whether or not this slot can be updated by rule effects.
  FuncArgDef:
    type: object
    required:
      - type
      - description
    properties:
      type:
        type: string
        enum:
          - string
          - boolean
          - number
          - time
        description: The type of value this argument expects.
        minLength: 1
      description:
        type: string
        description: >-
          A campaigner-friendly description of the argument, this will also be
          shown in the rule editor.
  TemplateArgDef:
    type: object
    description: ''
    required:
      - type
      - description
      - ui
      - title
    properties:
      type:
        type: string
        enum:
          - string
          - boolean
          - number
          - time
        description: The type of value this argument expects.
        minLength: 1
      description:
        type: string
        description: >-
          A campaigner-friendly description of the argument, this will also be
          shown in the rule editor.
      title:
        type: string
        description: >-
          A campaigner friendly name for the argument, this will be shown in the
          rule editor.
        minLength: 1
      ui:
        type: object
        description: >-
          Arbitrary metadata that may be used to render an input for this
          argument.
        additionalProperties: true
    additionalProperties: false
  FunctionDef:
    type: object
    required:
      - name
      - type
      - args
    properties:
      name:
        type: string
        description: The function name used in Talang.
        minLength: 1
      type:
        type: string
        description: The type of this function argument.
      description:
        type: string
        description: A short description of the function.
      help:
        type: string
        description: Extended help text for the function.
      args:
        type: array
        description: An array of argument definitions.
        items:
          $ref: '#/definitions/FuncArgDef'
  NewTemplateDef:
    type: object
    required:
      - title
      - category
      - args
      - expr
    properties:
      title:
        type: string
        description: >-
          Campaigner-friendly name for the template that will be shown in the
          rule editor.
        minLength: 1
      description:
        type: string
        description: >-
          A short description of the template that will be shown in the rule
          editor.
      help:
        type: string
        description: Extended help text for the template.
      category:
        description: Used for grouping templates in the rule editor sidebar.
        type: string
        minLength: 1
      expr:
        type: array
        description: A Talang expression that contains variable bindings referring to args.
        items:
          type: object
      args:
        type: array
        description: An array of argument definitions.
        items:
          $ref: '#/definitions/TemplateArgDef'
      expose:
        type: boolean
        description: A flag to control exposure in Rule Builder.
        default: false
  TemplateDef:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationId
      - title
      - category
      - args
      - expr
      - name
      - description
      - help
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationId:
        type: integer
        description: The ID of the application that owns this entity.
      title:
        type: string
        description: >-
          Campaigner-friendly name for the template that will be shown in the
          rule editor.
        minLength: 1
      description:
        type: string
        description: >-
          A short description of the template that will be shown in the rule
          editor.
      help:
        type: string
        description: Extended help text for the template.
      category:
        description: Used for grouping templates in the rule editor sidebar.
        type: string
        minLength: 1
      expr:
        type: array
        description: A Talang expression that contains variable bindings referring to args.
        items:
          type: object
      args:
        type: array
        description: An array of argument definitions.
        items:
          $ref: '#/definitions/TemplateArgDef'
      expose:
        type: boolean
        description: A flag to control exposure in Rule Builder.
        default: false
      name:
        type: string
        description: The template name used in Talang.
        minLength: 1
    additionalProperties: false
  NewAttribute:
    type: object
    description: ''
    required:
      - entity
      - name
      - title
      - type
      - description
      - suggestions
      - editable
    properties:
      entity:
        type: string
        description: >-
          The name of the entity that can have this attribute. When creating or
          updating the entities of a given type, you can include an `attributes`
          object with keys corresponding to the `name` of the custom attributes
          for that type.
        enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
      eventType:
        type: string
      name:
        type: string
        description: >
          The attribute name that will be used in API requests and Talang. E.g.
          if `name == "region"` then you would set the region attribute by
          including an `attributes.region` property in your request payload.
      title:
        type: string
        description: >-
          The human-readable name for the attribute that will be shown in the
          Campaign Manager. Like `name`, the combination of entity and title
          must also be unique.
      type:
        type: string
        enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
        description: >-
          The data type of the attribute, a `time` attribute must be sent as a
          string that conforms to the
          [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp format.
      description:
        type: string
        description: A description of this attribute.
      suggestions:
        type: array
        description: A list of suggestions for the attribute.
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
      editable:
        type: boolean
        description: Whether or not this attribute can be edited.
    additionalProperties: false
  Attribute:
    type: object
    description: ''
    required:
      - id
      - created
      - accountId
      - entity
      - name
      - title
      - type
      - description
      - suggestions
      - editable
      - locked
      - usedAt
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      entity:
        type: string
        description: >-
          The name of the entity that can have this attribute. When creating or
          updating the entities of a given type, you can include an `attributes`
          object with keys corresponding to the `name` of the custom attributes
          for that type.
        enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
      eventType:
        type: string
      name:
        type: string
        description: >
          The attribute name that will be used in API requests and Talang. E.g.
          if `name == "region"` then you would set the region attribute by
          including an `attributes.region` property in your request payload.
      title:
        type: string
        description: >-
          The human-readable name for the attribute that will be shown in the
          Campaign Manager. Like `name`, the combination of entity and title
          must also be unique.
      type:
        type: string
        enum:
          - string
          - number
          - boolean
          - time
          - (list string)
          - (list number)
          - (list time)
          - location
        description: >-
          The data type of the attribute, a `time` attribute must be sent as a
          string that conforms to the
          [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp format.
      description:
        type: string
        description: A description of this attribute.
      suggestions:
        type: array
        description: A list of suggestions for the attribute.
        maxItems: 50
        items:
          type: string
          minLength: 1
          maxLength: 50
      editable:
        type: boolean
        description: Whether or not this attribute can be edited.
      locked:
        type: boolean
        default: false
        description: >-
          Indicates whether this attribute is in use. If in use only title can
          be changed and other operations are prohibited.
      usedAt:
        type: array
        description: array of rulesets where the attribute is used
        items:
          type: string
    additionalProperties: false
  NewEventType:
    type: object
    description: ''
    required:
      - applicationIds
      - title
      - name
      - description
      - mimeType
      - handler
      - version
    properties:
      applicationIds:
        type: array
        description: The IDs of the applications that are related to this entity.
        items:
          type: integer
      title:
        type: string
        minLength: 1
        description: >-
          The human-friendly display name for this event type. Use a short,
          past-tense, description of the event.
      name:
        type: string
        minLength: 1
        description: >-
          The machine-friendly canonical name for this event type. This will be
          used in URLs, and cannot be changed after an event type has been
          created.
      description:
        type: string
        description: >
          An explanation of when the event type is triggered. Write this with a
          campaign manager in mind. For example:


          > The "Payment Accepted" event is triggered after successful
          processing of a payment by our payment gateway.
      mimeType:
        type: string
        enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
        description: >-
          This defines how the request payload will be parsed before your
          handler code is run.
      examplePayload:
        type: string
        description: >-
          It is often helpful to include an example payload with the event type
          definition for documentation purposes.
      schema:
        type: object
        additionalProperties: true
        description: >
          It is strongly recommended to define a JSON schema that will be used
          to perform structural validation of request payloads after parsing.
      handlerLanguage:
        type: string
        enum:
          - talang
        description: >-
          The language of the handler code. Currently only `"talang"` is
          supported.
      handler:
        type: string
        description: >
          Code that will be run after successful parsing & validation of the
          payload for this event.

          This code _may_ choose to evaluate campaign rules.
      version:
        type: integer
        description: >
          The version of this event type. When updating an existing event type
          this must be **exactly** `currentVersion + 1`.
    additionalProperties: false
  EventType:
    type: object
    description: ''
    required:
      - id
      - created
      - applicationIds
      - title
      - name
      - description
      - mimeType
      - handler
      - version
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      applicationIds:
        type: array
        description: The IDs of the applications that are related to this entity.
        items:
          type: integer
      title:
        type: string
        minLength: 1
        description: >-
          The human-friendly display name for this event type. Use a short,
          past-tense, description of the event.
      name:
        type: string
        minLength: 1
        description: >-
          The machine-friendly canonical name for this event type. This will be
          used in URLs, and cannot be changed after an event type has been
          created.
      description:
        type: string
        description: >
          An explanation of when the event type is triggered. Write this with a
          campaign manager in mind. For example:


          > The "Payment Accepted" event is triggered after successful
          processing of a payment by our payment gateway.
      mimeType:
        type: string
        enum:
          - application/json
          - application/x-www-form-urlencoded
          - none
        description: >-
          This defines how the request payload will be parsed before your
          handler code is run.
      examplePayload:
        type: string
        description: >-
          It is often helpful to include an example payload with the event type
          definition for documentation purposes.
      schema:
        type: object
        additionalProperties: true
        description: >
          It is strongly recommended to define a JSON schema that will be used
          to perform structural validation of request payloads after parsing.
      handlerLanguage:
        type: string
        enum:
          - talang
        description: >-
          The language of the handler code. Currently only `"talang"` is
          supported.
      handler:
        type: string
        description: >
          Code that will be run after successful parsing & validation of the
          payload for this event.

          This code _may_ choose to evaluate campaign rules.
      version:
        type: integer
        description: >
          The version of this event type. When updating an existing event type
          this must be **exactly** `currentVersion + 1`.
    additionalProperties: false
  ImportCoupons:
    type: object
    required:
      - coupons
    properties:
      coupons:
        type: string
    additionalProperties: false
  NewWebhook:
    type: object
    description: ''
    required:
      - applicationIds
      - title
      - verb
      - url
      - headers
      - params
      - enabled
    properties:
      applicationIds:
        type: array
        description: The IDs of the applications that are related to this entity.
        items:
          type: integer
      title:
        type: string
        description: Friendly title for this webhook
      verb:
        type: string
        enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
        description: API method for this webhook
      url:
        type: string
        description: API url (supports templating using parameters) for this webhook
      headers:
        type: array
        description: List of API HTTP headers for this webhook
        items:
          type: string
          pattern: '^([^:,]*):([^]*|[^,]*)$'
      payload:
        type: string
        description: API payload (supports templating using parameters) for this webhook
      params:
        type: array
        description: Array of template argument definitions
        items:
          $ref: '#/definitions/TemplateArgDef'
      enabled:
        type: boolean
        description: Enables or disables webhook from showing in rule builder
    additionalProperties: false
  Webhook:
    type: object
    description: ''
    required:
      - id
      - created
      - modified
      - applicationIds
      - title
      - verb
      - url
      - headers
      - params
      - enabled
      - usedAt
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      modified:
        type: string
        format: date-time
        description: The exact moment this entity was last modified.
      applicationIds:
        type: array
        description: >-
          The IDs of the applications that are related to this entity. The IDs
          of the applications that are related to this entity.
        items:
          type: integer
          description: ''
      title:
        type: string
        description: Friendly title for this webhook
      verb:
        type: string
        enum:
          - POST
          - PUT
          - GET
          - DELETE
          - PATCH
        description: API method for this webhook
      url:
        type: string
        description: API url (supports templating using parameters) for this webhook
      headers:
        type: array
        description: List of API HTTP headers for this webhook
        items:
          type: string
          pattern: '^([^:,]*):([^]*|[^,]*)$'
      payload:
        type: string
        description: API payload (supports templating using parameters) for this webhook
      params:
        type: array
        description: Array of template argument definitions
        items:
          $ref: '#/definitions/TemplateArgDef'
      enabled:
        type: boolean
        description: Enables or disables webhook from showing in rule builder
      usedAt:
        type: array
        description: array of rulesets where webhook is used
        items:
          type: string
    additionalProperties: false
  ManagerConfig:
    type: object
    required:
      - schemaVersion
    properties:
      schemaVersion:
        type: integer
    additionalProperties: true
  Export:
    type: object
    description: ''
    required:
      - id
      - created
      - accountId
      - userId
      - entity
      - filter
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      userId:
        type: integer
        description: The ID of the account that owns this entity.
      entity:
        type: string
        enum:
          - Coupon
          - Effect
          - CustomerSession
        description: The name of the entity that was exported.
      filter:
        type: object
        description: Map of keys and values that were used to filter the exported rows
        additionalProperties: true
    additionalProperties: false
  NewImport:
    type: object
    description: ''
    required:
      - entity
    properties:
      entity:
        type: string
        enum:
          - Coupon
        description: The name of the entity that was imported.
    additionalProperties: false
  Import:
    type: object
    description: ''
    required:
      - id
      - created
      - accountId
      - userId
      - entity
      - amount
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      accountId:
        type: integer
        description: The ID of the account that owns this entity.
      userId:
        type: integer
        description: The ID of the account that owns this entity.
      entity:
        type: string
        enum:
          - Coupon
        description: The name of the entity that was imported.
      amount:
        type: integer
        minimum: 0
        description: The number of members that imported.
    additionalProperties: false
  FeaturesFeed:
    type: object
    description: ''
    properties:
      title:
        type: string
      pubDate:
        type: string
    additionalProperties: false
  LibraryAttribute:
    type: object
    description: ''
    required:
      - entity
      - name
      - title
      - type
      - description
      - presets
      - tags
      - suggestions
    properties:
      entity:
        type: string
        description: >-
          The name of the entity that can have this attribute. When creating or
          updating the entities of a given type, you can include an `attributes`
          object with keys corresponding to the `name` of the custom attributes
          for that type.
        enum:
          - Application
          - Campaign
          - CustomerProfile
          - CustomerSession
          - CartItem
          - Coupon
          - Event
      name:
        type: string
        description: >
          The attribute name that will be used in API requests and Talang. E.g.
          if `name == "region"` then you would set the region attribute by
          including an `attributes.region` property in your request payload.
      title:
        type: string
        description: >-
          The human-readable name for the attribute that will be shown in the
          Campaign Manager. Like `name`, the combination of entity and title
          must also be unique.
      type:
        type: string
        enum:
          - string
          - number
          - boolean
          - time
        description: >-
          The data type of the attribute, a `time` attribute must be sent as a
          string that conforms to the
          [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp format.
      description:
        type: string
        description: A description of the attribute.
      presets:
        type: array
        description: The presets that indicate to which industry the attribute applies to.
        items:
          type: string
      suggestions:
        type: array
        description: Short suggestions that are used to group attributes.
        items:
          type: string
    additionalProperties: false
  Role:
    type: object
    description: ''
    required:
      - id
      - accountID
    properties:
      id:
        type: integer
        description: The ID of the role corresponding to the DB row
      accountID:
        type: integer
        description: The ID of the Talon.One account that owns this role.
      name:
        type: string
        description: Name of the role
      description:
        type: string
        description: Description of the role
      members:
        type: array
        items:
          type: integer
        description: A list of userid in this role
      acl:
        type: string
        format: aclRole
        description: Role Policy this should be a stringified blob of json
    additionalProperties: false
  NewRole:
    type: object
    description: ''
    required:
      - name
      - acl
      - users
    properties:
      name:
        type: string
        description: Name of the role
      description:
        type: string
        description: Description of the role
      acl:
        type: string
        description: Role Policy this should be a stringified blob of json
      users:
        type: array
        items:
          type: integer
        description: An array of userIDs
    additionalProperties: false
  UpdateRole:
    type: object
    properties:
      name:
        type: string
        description: Name of the role
      description:
        type: string
        description: Description of the role
      acl:
        type: string
        description: Role Policy this should be a stringified blob of json
      users:
        type: array
        items:
          type: integer
        description: an array of userids
  RoleAssign:
    type: object
    description: ''
    required:
      - users
      - roles
    properties:
      users:
        type: array
        items:
          type: integer
        description: An array of userIDs
      roles:
        type: array
        items:
          type: integer
        description: An array of roleIDs
    additionalProperties: false
  RoleMembership:
    type: object
    required:
      - RoleID
      - UserID
    properties:
      RoleID:
        type: integer
        description: ID of role
      UserID:
        type: integer
        description: ID of User
  LedgerEntry:
    type: object
    description: ''
    required:
      - id
      - created
      - eventId
      - accountId
      - profileId
      - loyaltyProgramId
      - amount
      - reason
      - expiryDate
    properties:
      id:
        type: integer
        description: Unique ID for this entity.
      created:
        type: string
        format: date-time
        description: The exact moment this entity was created.
      profileId:
        type: string
        description: >-
          ID of the customers profile as used within this Talon.One account. May
          be omitted or set to the empty string if the customer does not yet
          have a known profile ID.
      accountId:
        type: integer
        description: The ID of the Talon.One account that owns this profile.
      loyaltyProgramId:
        type: integer
        description: ID of the ledger
      eventId:
        type: integer
        description: ID of the related event
      amount:
        type: integer
        description: Amount of loyalty points
      reason:
        type: string
        description: reason for awarding/deducting points
      expiryDate:
        type: string
        format: date-time
        description: Expiry date of the points
      referenceId:
        type: integer
        description: The ID of the balancing ledgerEntry
    additionalProperties: false
  LoyaltyMembership:
    type: object
    required:
      - loyaltyProgramId
    properties:
      joined:
        type: string
        format: date-time
        title: Loyalty program joined at
        description: The moment in which the loyalty program was joined.
      loyaltyProgramId:
        type: integer
        title: Loyalty program ID
        description: The ID of the loyalty program belonging to this entity.
  CartItemAdjustment:
    type: object
    required:
      - payFromLoyaltyProgram
      - pointPayment
    properties:
      payFromLoyaltyProgram:
        title: Payment from this Loyalty Program
        description: Loyalty Program to be used for payment
        type: integer
      pointPayment:
        title: Points to be spend
        description: Amount of points to be spend
        type: integer
        minimum: 1
      remainingPrice:
        title: Remaining Price
        description: Remaining price in currency after payment in points has been made
        type: number
        minimum: 0
  Meta:
    type: object
    properties:
      campaigns:
        description: >-
          Maps each evaluated campaign ID to a key-value list of that campaigns
          attributes. Campaigns without attributes will be omitted.
        type: object
        additionalProperties: true
      coupons:
        description: Maps the coupon value to a key-value list of that coupons attributes.
        type: object
        additionalProperties: true
      couponRejectionReason:
        $ref: '#/definitions/CouponRejectionReason'
      warnings:
        descriptions: Contains warnings about possible misuse.
        type: object
        additionalProperties: true
  CouponRejectionReason:
    description: >-
      Holds a reference to the campaign, the coupon and the reason for which
      that coupon was rejected. Should only be present when there is a
      'rejectCoupon' effect.
    type: object
    required:
      - campaignId
      - couponId
      - reason
    properties:
      campaignId:
        type: integer
      couponId:
        type: integer
      reason:
        type: string
        enum:
          - CouponNotFound
          - CouponPartOfNotRunningCampaign
          - CouponLimitReached
          - CouponRecipientDoesNotMatch
          - CouponExpired
          - CouponStartDateInFuture
          - CouponRejectedByCondition
  ApplicationAPIKey:
    type: object
    required:
      - ID
      - AccountID
      - ApplicationID
      - Created
      - Expires
      - CreatedBy
    properties:
      ID:
        type: integer
        description: ID of the API Key
      AccountID:
        type: integer
        description: ID of account the key is used for
      ApplicationID:
        type: integer
        description: ID of application the key is used for
      Created:
        type: string
        format: date-time
        description: The date the API key was created
      Expires:
        type: string
        format: date-time
        description: The date the API key expired
  NewApplicationAPIKey:
    type: object
    required:
      - id
      - accountID
      - applicationID
      - created
      - expires
      - createdBy
      - key
    properties:
      id:
        type: integer
        description: ID of the API Key
      accountID:
        type: integer
        description: ID of account the key is used for
      applicationID:
        type: integer
        description: ID of application the key is used for
      created:
        type: string
        format: date-time
        description: The date the API key was created
      expires:
        type: string
        format: date-time
        description: The date the API key expired
      key:
        type: string
        description: Raw API Key
  CreateApplicationAPIKey:
    type: object
    required:
      - expires
    properties:
      expires:
        type: string
        format: date-time
        description: The date the API key expired
