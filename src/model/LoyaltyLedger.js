/**
 * Talon.One API
 * The Talon.One API is used to manage applications and campaigns, as well as to integrate with your application. The operations in the _Integration API_ section are used to integrate with our platform, while the other operations are used to manage applications and campaigns.  ### Where is the API?  The API is available at the same hostname as these docs. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerProfile][] operation is `https://mycompany.talon.one/v1/customer_profiles/id`  [updateCustomerProfile]: #operation--v1-customer_profiles--integrationId--put 
 *
 * OpenAPI spec version: 1.0.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LoyaltyLedgerEntry'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LoyaltyLedgerEntry'));
  } else {
    // Browser globals (root is window)
    if (!root.TalononeApi) {
      root.TalononeApi = {};
    }
    root.TalononeApi.LoyaltyLedger = factory(root.TalononeApi.ApiClient, root.TalononeApi.LoyaltyLedgerEntry);
  }
}(this, function(ApiClient, LoyaltyLedgerEntry) {
  'use strict';




  /**
   * The LoyaltyLedger model module.
   * @module model/LoyaltyLedger
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>LoyaltyLedger</code>.
   * Ledger of Balance in Loyalty Program for a Customer
   * @alias module:model/LoyaltyLedger
   * @class
   * @param total {Number} The current balance in the program.
   * @param transactions {Array.<module:model/LoyaltyLedgerEntry>} 
   */
  var exports = function(total, transactions) {
    var _this = this;

    _this['total'] = total;
    _this['transactions'] = transactions;


  };

  /**
   * Constructs a <code>LoyaltyLedger</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LoyaltyLedger} obj Optional instance to populate.
   * @return {module:model/LoyaltyLedger} The populated <code>LoyaltyLedger</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('total')) {
        obj['total'] = ApiClient.convertToType(data['total'], 'Number');
      }
      if (data.hasOwnProperty('transactions')) {
        obj['transactions'] = ApiClient.convertToType(data['transactions'], [LoyaltyLedgerEntry]);
      }
      if (data.hasOwnProperty('loyaltyProgramId')) {
        obj['loyaltyProgramId'] = ApiClient.convertToType(data['loyaltyProgramId'], 'Number');
      }
      if (data.hasOwnProperty('loyaltyProgramName')) {
        obj['loyaltyProgramName'] = ApiClient.convertToType(data['loyaltyProgramName'], 'String');
      }
    }
    return obj;
  }

  /**
   * The current balance in the program.
   * @member {Number} total
   */
  exports.prototype['total'] = undefined;
  /**
   * @member {Array.<module:model/LoyaltyLedgerEntry>} transactions
   */
  exports.prototype['transactions'] = undefined;
  /**
   * The ID of the loyalty program this ledger belongs to.
   * @member {Number} loyaltyProgramId
   */
  exports.prototype['loyaltyProgramId'] = undefined;
  /**
   * The name of the loyalty program this ledger belongs to.
   * @member {String} loyaltyProgramName
   */
  exports.prototype['loyaltyProgramName'] = undefined;



  return exports;
}));


